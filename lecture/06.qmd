---
title: "06 - –î–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å üå≤üå¥üå≥"
subtitle: "Machine Learning"
author: "–Ü–≥–æ—Ä –ú—ñ—Ä–æ—à–Ω–∏—á–µ–Ω–∫–æ"
date: today
date-format: iso
institute: –ö–ù–ï–£::–Ü–Ü–¢–ï
crossref:
  fig-title: –†–∏—Å.     # (default is "Figure")
  tbl-title: –¢–∞–±.     # (default is "Table")
format:
  revealjs: 
    
    theme: [simple, custom.scss]
    # footer: <https://t.me/araprof>
    logo: img/logo.png
    chalkboard: true
    slide-number: true
    toc: true
    toc-title: –ó–ú–Ü–°–¢
    transition: fade
    mouse-wheel: true
    highlight-style: github
    mainfont: metropolis
    toc-depth: 1
    fig-width: 9
    fig-height: 5
filters:
  - line-highlight
    
knitr: 
  opts_chunk: 
    echo: true
    warnings: false
    message: false
editor_options: 
  chunk_output_type: console
---
```{r, setup, include = F}
library(pacman)
p_load(
  ISLR,
  broom, tidyverse,
  ggplot2, ggthemes, ggforce, ggridges, cowplot, scales,
  latex2exp, viridis, extrafont, gridExtra, plotly, ggformula,
  DiagrammeR,
  kableExtra, DT, huxtable,
  data.table, dplyr, snakecase, janitor,
  lubridate, knitr,
  caret, tidymodels, rpart, rpart.plot, rattle,
  here, magrittr, parallel, fontawesome
)
# Define colors
red_pink   = "#e64173"
turquoise  = "#20B2AA"
orange     = "#FFA500"
red        = "#fb6107"
blue       = "#3b3b9a"
green      = "#8bb174"
grey_light = "grey70"
grey_mid   = "grey50"
grey_dark  = "grey20"
purple     = "#6A5ACD"
slate      = "#314f4f"
```

# –î–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å

## –û—Å–Ω–æ–≤–∏

[–î–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å]{.attn}

- —Ä–æ–∑–¥—ñ–ª—è—é—Ç—å **–ø—Ä–æ—Å—Ç—ñ—Ä –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–∞** (–Ω–∞—à $\mathbf{X}$) –Ω–∞ –æ–±–ª–∞—Å—Ç—ñ
- –ø–æ—Ç—ñ–º –ø—Ä–æ–≥–Ω–æ–∑—É—é—Ç—å –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –æ–±–ª–∞—Å—Ç—ñ

. . .

[–î–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å]{.attn}

1. –ü—Ä–∞—Ü—é—é—Ç—å —è–∫ –¥–ª—è [—è–∫ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó, —Ç–∞–∫ —ñ —Ä–µ–≥—Ä–µ—Å—ñ—ó]{.hi}

. . .

1. –∑–∞ —Å–≤–æ—î—é —Å—É—Ç—Ç—é —î [–Ω–µ–ª—ñ–Ω—ñ–π–Ω–∏–º–∏]{.hi}

. . .

1. —î –≤—ñ–¥–Ω–æ—Å–Ω–æ [–ø—Ä–æ—Å—Ç–∏–º–∏]{.hi} —ñ [—ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–æ–≤–∞–Ω–∏–º–∏]{.hi}

. . .

1. –ª–µ–≥–∫–æ –º–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏ –Ω–∞ [–¥—É–∂–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø—Ä–æ–º–æ–∂–Ω—ñ –∞–Ω—Å–∞–º–±–ª–µ–≤—ñ –º–µ—Ç–æ–¥–∏]{.hi} (*–±–∞–≥–∞—Ç–æ* –¥–µ—Ä–µ–≤)

---

```{r, data-default, include = F}
# Load 'Defualt' data from 'ISLR'
default_df = ISLR::Default %>% as_tibble()
```

[–ü—Ä–∏–∫–ª–∞–¥:]{.ex} **–ü—Ä–æ—Å—Ç–µ –¥–µ—Ä–µ–≤–æ —Ä—ñ—à–µ–Ω—å**, —â–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫—É—î –¥–µ—Ñ–æ–ª—Ç –∫—Ä–µ–¥–∏—Ç–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏

```{r, tree-graph, echo = F, cache = T}
DiagrammeR::grViz("
digraph {

graph [layout = dot, overlap = false, fontsize = 14]

node [shape = oval, fontname = 'Fira Sans', color = Gray95, style = filled]
s1 [label = 'Bal. > 1,800']
s2 [label = 'Bal. < 1,972']
s3 [label = 'Inc. > 27K']

node [shape = egg, fontname = 'Fira Sans', color = Purple, style = filled, fontcolor = White]
l1 [label = 'No (98%)']
l4 [label = 'No (69%)']

node [shape = egg, fontname = 'Fira Sans', color = Orange, style = filled, fontcolor = White]
l2 [label = 'Yes (76%)']
l3 [label = 'Yes (59%)']

edge [fontname = 'Fira Sans', color = Grey70]
s1 -> l1 [label = 'F']
s1 -> s2 [label = 'T']
s2 -> s3 [label = 'T']
s2 -> l2 [label = 'F']
s3 -> l3 [label = 'T']
s3 -> l4 [label = 'F']
}
")
```

---

–î–∞–≤–∞–π—Ç–µ –ø–æ–¥–∏–≤–∏–º–æ—Å—è, —è–∫ –ø—Ä–∞—Ü—é—î –¥–µ—Ä–µ–≤–æ

---

–î–∞–≤–∞–π—Ç–µ –ø–æ–¥–∏–≤–∏–º–æ—Å—è, —è–∫ –ø—Ä–∞—Ü—é—î –¥–µ—Ä–µ–≤–æ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: [–¢–∞–∫]{.orange} *vs.* [–ù—ñ]{.purple}).

```{r, partition-base, include = F, cache = T}
gg_base = ggplot(
  data = default_df,
  aes(x = balance, y = income, color = default, alpha = default)
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_point(size = 2) +
scale_y_continuous("Income", labels = dollar) +
scale_x_continuous("Balance", labels = dollar) +
scale_color_manual("Defaulted:", values = c(purple, orange), labels = c("No", "Yes")) +
scale_alpha_manual("Defaulted:", values = c(0.1, 0.8), labels = c("No", "Yes")) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "none")
```

```{r, plot-raw, echo = F}
gg_base
```

---

[–ü–µ—Ä—à–∏–π —Ä–æ–∑–¥—ñ–ª]{.hi-pink} –¥—ã–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å —É $1800 –¥–æ–ª–∞—Ä—ñ–≤ –°–®–ê.

```{r, plot-split1, echo = F, cache = T, dependson = c(-2)}
# Add the first split (to existing figure)
gg_base +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  color = red_pink, size = 1.2
)
```

---

[–î—Ä—É–≥–∏–π —Ä–æ–∑–¥—ñ–ª]{.hi-pink} –¥—ñ–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ $1972 (*–∑–∞ —É–º–æ–≤–∏ –±–∞–ª–∞–Ω—Å—É > \$1800*).

```{r, plot-split2, echo = F, cache = T, dependson = c(-3)}
gg_base +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  color = red_pink, size = 1.2
)
```

---

[–¢—Ä–µ—Ç—ñ–π —Ä–æ–∑–¥—ñ–ª]{.hi-pink} –¥—ñ–ª–∏—Ç—å –¥–æ—Ö—ñ–¥ —É $27K **–¥–ª—è** –±–∞–ª–ª–∞–Ω—Å—É –≤—ñ–¥ \$1800 –¥–æ \$1972 –¥–æ–ª–∞—Ä—ñ–≤.

```{r, plot-split3, echo = F, cache = T, dependson = c(-4)}
gg_base +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1800, xend = 1972, y = 27e3, yend = 27e3,
  color = red_pink, size = 1.2
)
```

---

–¶—ñ —Ç—Ä–∏ —Ä–æ–∑–¥—ñ–ª–∏ –¥–∞—é—Ç—å –Ω–∞–º —á–æ—Ç–∏—Ä–∏ **–æ–±–ª–∞—Å—Ç—ñ**...

```{r, plot-split3b, echo = F, cache = T, dependson = c(-5)}
gg_base +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1800, xend = 1972, y = 27e3, yend = 27e3,
  linetype = "longdash"
) +
annotate("text",
  x = 900, y = 37500, label = expression(R[1]),
  size = 8, family = "Fira Sans Book"
) +
annotate("text",
  x = 1886, y = 5.1e4, label = expression(R[2]),
  size = 8, family = "Fira Sans Book"
) +
annotate("text",
  x = 1886, y = 1e4, label = expression(R[3]),
  size = 8, family = "Fira Sans Book"
) +
annotate("text",
  x = 2336, y = 37500, label = expression(R[4]),
  size = 8, family = "Fira Sans Book"
)
```

---

**–ü—Ä–æ–≥–Ω–æ–∑–∏:** *–Ω–∞–ø—Ä–∏–∫–ª–∞–¥*, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∏–π –∫–ª–∞—Å –æ–±–ª–∞—Å—Ç—ñ.

```{r, plot-split3c, echo = F, cache = T, dependson = c(-6)}
gg_base +
annotate(
  "rect",
  xmin = 0, xmax = 1800, ymin = 0, ymax = Inf,
  fill = purple, alpha = 0.3
) +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1800, xend = 1972, y = 27e3, yend = 27e3,
  linetype = "longdash"
)
```

---

**–ü—Ä–æ–≥–Ω–æ–∑–∏:** *–Ω–∞–ø—Ä–∏–∫–ª–∞–¥*, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∏–π –∫–ª–∞—Å –æ–±–ª–∞—Å—Ç—ñ.

```{r, plot-split3d, echo = F, cache = T, dependson = c(-7)}
gg_base +
annotate(
  "rect",
  xmin = 0, xmax = 1800, ymin = 0, ymax = Inf,
  fill = purple, alpha = 0.3
) +
annotate(
  "rect",
  xmin = 1800, xmax = 1972, ymin = 27e3, ymax = Inf,
  fill = orange, alpha = 0.3
) +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1800, xend = 1972, y = 27e3, yend = 27e3,
  linetype = "longdash"
)
```

---

**–ü—Ä–æ–≥–Ω–æ–∑–∏:** *–Ω–∞–ø—Ä–∏–∫–ª–∞–¥*, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∏–π –∫–ª–∞—Å –æ–±–ª–∞—Å—Ç—ñ.

```{r, plot-split3e, echo = F, cache = T, dependson = c(-8)}
gg_base +
annotate(
  "rect",
  xmin = 0, xmax = 1800, ymin = 0, ymax = Inf,
  fill = purple, alpha = 0.3
) +
annotate(
  "rect",
  xmin = 1800, xmax = 1972, ymin = 27e3, ymax = Inf,
  fill = orange, alpha = 0.3
) +
annotate(
  "rect",
  xmin = 1800, xmax = 1972, ymin = 0, ymax = 27e3,
  fill = purple, alpha = 0.3
) +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1800, xend = 1972, y = 27e3, yend = 27e3,
  linetype = "longdash"
)
```

---

**–ü—Ä–æ–≥–Ω–æ–∑–∏:** *–Ω–∞–ø—Ä–∏–∫–ª–∞–¥*, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∏–π –∫–ª–∞—Å –æ–±–ª–∞—Å—Ç—ñ.

```{r, plot-split3f, echo = F, cache = T, dependson = c(-9)}
gg_base +
annotate(
  "rect",
  xmin = 0, xmax = 1800, ymin = 0, ymax = Inf,
  fill = purple, alpha = 0.3
) +
annotate(
  "rect",
  xmin = 1800, xmax = 1972, ymin = 27e3, ymax = Inf,
  fill = orange, alpha = 0.3
) +
annotate(
  "rect",
  xmin = 1800, xmax = 1972, ymin = 0, ymax = 27e3,
  fill = purple, alpha = 0.3
) +
annotate(
  "rect",
  xmin = 1972, xmax = Inf, ymin = 0, ymax = Inf,
  fill = orange, alpha = 0.3
) +
annotate(
  "segment",
  x = 1800, xend = 1800, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1972, xend = 1972, y = -Inf, yend = Inf,
  linetype = "longdash"
) +
annotate(
  "segment",
  x = 1800, xend = 1972, y = 27e3, yend = 27e3,
  linetype = "longdash"
)
```

---

[–û–±–ª–∞—Å—Ç—ñ]{.hi-pink} –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å [–∫—ñ–Ω—Ü–µ–≤–∏–º –≤—É–∑–ª–∞–º]{.attn} (–∞–±–æ [–ª–∏—Å—Ç—è–º]{.attn}) –¥–µ—Ä–µ–≤–∞.

```{r, tree-leaves, echo = F, cache = T}
DiagrammeR::grViz("
digraph {

graph [layout = dot, overlap = false, fontsize = 14]

node [shape = oval, fontname = 'Fira Sans', color = Gray95, style = filled]
s1 [label = 'Bal. > 1,800']
s2 [label = 'Bal. < 1,972']
s3 [label = 'Inc. > 27K']

node [shape = egg, fontname = 'Fira Sans', color = DeepPink, style = filled, fontcolor = White]
l1 [label = 'No (98%)']
l4 [label = 'No (69%)']

node [shape = egg, fontname = 'Fira Sans', color = DeepPink, style = filled, fontcolor = White]
l2 [label = 'Yes (76%)']
l3 [label = 'Yes (59%)']

edge [fontname = 'Fira Sans', color = Grey70]
s1 -> l1 [label = 'F']
s1 -> s2 [label = 'T']
s2 -> s3 [label = 'T']
s2 -> l2 [label = 'F']
s3 -> l3 [label = 'T']
s3 -> l4 [label = 'F']
}
")
```

---

[–†–æ–∑–¥—ñ–ª–æ–≤—ñ –ª—ñ–Ω—ñ—ó]{.hi-pink} –≥—Ä–∞—Ñ—ñ–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å [–≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–º –≤—É–∑–ª–∞–º]{.attn} –¥–µ—Ä–µ–≤–∞.

```{r, tree-internal, echo = F, cache = T}
DiagrammeR::grViz("
digraph {

graph [layout = dot, overlap = false, fontsize = 14]

node [shape = oval, fontname = 'Fira Sans', color = DeepPink, style = filled, fontcolor = White]
s1 [label = 'Bal. > 1,800']
s2 [label = 'Bal. < 1,972']
s3 [label = 'Inc. > 27K']

node [shape = egg, fontname = 'Fira Sans', color = Grey95, style = filled, fontcolor = White]
l1 [label = 'No (98%)']
l4 [label = 'No (69%)']

node [shape = egg, fontname = 'Fira Sans', color = Grey95, style = filled, fontcolor = White]
l2 [label = 'Yes (76%)']
l3 [label = 'Yes (59%)']

edge [fontname = 'Fira Sans', color = Grey70]
s1 -> l1 [label = 'F']
s1 -> s2 [label = 'T']
s2 -> s3 [label = 'T']
s2 -> l2 [label = 'F']
s3 -> l3 [label = 'T']
s3 -> l4 [label = 'F']
}
")
```

---

–°–µ–≥–º–µ–Ω—Ç–∏, —â–æ –∑'—î–¥–Ω—É—é—Ç—å –≤—É–∑–ª–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –¥–µ—Ä–µ–≤–∞, —î –π–æ–≥–æ [–≥—ñ–ª–∫–∞–º–∏]{.attn}.

```{r, tree-branches, echo = F, cache = T}
DiagrammeR::grViz("
digraph {

graph [layout = dot, overlap = false, fontsize = 14]

node [shape = oval, fontname = 'Fira Sans', color = Grey95, style = filled, fontcolor = White]
s1 [label = 'Bal. > 1,800']
s2 [label = 'Bal. < 1,972']
s3 [label = 'Inc. > 27K']

node [shape = egg, fontname = 'Fira Sans', color = Grey95, style = filled, fontcolor = White]
l1 [label = 'No (98%)']
l4 [label = 'No (69%)']

node [shape = egg, fontname = 'Fira Sans', color = Grey95, style = filled, fontcolor = White]
l2 [label = 'Yes (76%)']
l3 [label = 'Yes (59%)']

edge [fontname = 'Fira Sans', color = DeepPink]
s1 -> l1 [label = 'F']
s1 -> s2 [label = 'T']
s2 -> s3 [label = 'T']
s2 -> l2 [label = 'F']
s3 -> l3 [label = 'T']
s3 -> l4 [label = 'F']
}
")
```

---

<br>
<br>
<br>
–¢–µ–ø–µ—Ä –≤–∏ –∑–Ω–∞—î—Ç–µ –∞–Ω–∞—Ç–æ–º—ñ—é –¥–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å.

–ê–ª–µ –∑–≤—ñ–¥–∫–∏ –±–µ—Ä—É—Ç—å—Å—è –¥–µ—Ä–µ–≤–∞ ‚Äî —è–∫ –º–∏ –Ω–∞–≤—á–∞—î–º–æ –¥–µ—Ä–µ–≤–æ?

# –†–µ–≥—Ä–µ—Å—ñ–π–Ω—ñ –¥–µ—Ä–µ–≤–∞

## –†–µ–≥—Ä–µ—Å—ñ–π–Ω—ñ –¥–µ—Ä–µ–≤–∞

–ú–∏ –ø–æ—á–Ω–µ–º–æ –∑ [—Ä–µ–≥—Ä–µ—Å—ñ–π–Ω–∏—Ö –¥–µ—Ä–µ–≤]{.attn}, _—Ç–æ–±—Ç–æ_ –¥–µ—Ä–µ–≤, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ –∑–∞–¥–∞—á–∞—Ö —Ä–µ–≥—Ä–µ—Å—ñ—ó.

. . .

–Ø–∫ –º–∏ –±–∞—á–∏–ª–∏, –∑–∞–≤–¥–∞–Ω–Ω—è [–≤–∏—Ä–æ—â—É–≤–∞–Ω–Ω—è –¥–µ—Ä–µ–≤–∞]{.hi} —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ –¥–≤–æ—Ö –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫—Ä–æ–∫—ñ–≤:

1. **–†–æ–∑–¥—ñ–ª–∏—Ç–∏ –ø—Ä–æ—Å—Ç—ñ—Ä –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ñ–≤** –Ω–∞ –æ–±–ª–∞—Å—Ç—ñ $J$ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–∏ $\mathbf{x}_1,\ldots,\mathbf{x}_p$)

. . .

1. **–ó—Ä–æ–±—ñ—Ç—å –ø—Ä–æ–≥–Ω–æ–∑**, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Å–µ—Ä–µ–¥–Ω—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ–±–ª–∞—Å—Ç—ñ
<br>–î–ª—è –æ–±–ª–∞—Å—Ç—ñ $R_j$ –ø–µ—Ä–µ–¥–±–∞—á—Ç–µ $\hat{y}_{R_j}$ –¥–µ

$$
\begin{align}
  \hat{y}_{R_j} = \frac{1}{n_j} \sum_{i\in R_j} y
\end{align}
$$

---

## –í–∏—Ä–æ—â—É–≤–∞–Ω–Ω—è –¥–µ—Ä–µ–≤

–ú–∏ [–≤–∏–±–∏—Ä–∞—î–º–æ –æ–±–ª–∞—Å—Ç—ñ –¥–ª—è –º—ñ–Ω—ñ–º—ñ–∑–∞—Ü—ñ—ó RSS]{.hi} *—Å–µ—Ä–µ–¥ —É—Å—ñ—Ö* $J$ [–æ–±–ª–∞—Å—Ç–µ–π]{.note}, _—Ç–æ–±—Ç–æ_,

$$
\begin{align}
  \sum_{j=1}^{J} \left( y_i - \hat{y}_{R_j} \right)^2
\end{align}
$$

. . .

**–ü—Ä–æ–±–ª–µ–º–∞:** –í–∏–≤—á–µ–Ω–Ω—è –∫–æ–∂–Ω–æ–≥–æ –º–æ–∂–ª–∏–≤–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É –æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–æ –Ω–µ–º–æ–∂–ª–∏–≤–æ.

. . .

**–†—ñ—à–µ–Ω–Ω—è:** –∞–ª–≥–æ—Ä–∏—Ç–º *–∑–≤–µ—Ä—Ö—É –≤–Ω–∏–∑, –∂–∞–¥—ñ–±–Ω–∏–π* –ø—ñ–¥ –Ω–∞–∑–≤–æ—é [—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–µ –¥–≤—ñ–π–∫–æ–≤–µ —Ä–æ–∑–±–∏—Ç—Ç—è]{.attn}

- [recursive]{.attn} –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "–Ω–∞–π–∫—Ä–∞—â–æ–≥–æ" —Ä–æ–∑–¥—ñ–ª—É, –ø–æ—Ç—ñ–º –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–∏–π "–Ω–∞–π–∫—Ä–∞—â–∏–π" —Ä–æ–∑–¥—ñ–ª, ...
- [binary]{.attn} –∫–æ–∂–Ω–µ —Ä–æ–∑–±–∏—Ç—Ç—è —Å—Ç–≤–æ—Ä—é—î –¥–≤—ñ –≥—ñ–ª–∫–∏ ‚Äî "—Ç–∞–∫" —ñ "–Ω—ñ"
- [greedy]{.attn} –∫—Ä–∞—â–µ —Ä–æ–∑–±–∏—Ç—Ç—è, –≤–∏—Ö–æ–¥—è—á–∏ –∑ –Ω–∞—è–≤–Ω–∏—Ö –Ω–∞ –∫–æ–∂–Ω–æ–º—É –µ—Ç–∞–ø—ñ –¥–∞–Ω–∏—Ö, –Ω–µ –∑–≤–∞–∂–∞—é—á–∏ –Ω–∞ –º–æ–∂–ª–∏–≤—ñ –Ω–∞—Å–ª—ñ–¥–∫–∏

---

## –í–∏—Ä–æ—â—É–≤–∞–Ω–Ω—è –¥–µ—Ä–µ–≤: –≤–∏–±—ñ—Ä –ø–æ–¥—ñ–ª—É

[–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è]{.ex} –î–µ—Ä–µ–≤–∞ —Ä–µ–≥—Ä–µ—Å—ñ—ó –≤–∏–±–∏—Ä–∞—é—Ç—å –ø–æ–¥—ñ–ª, —è–∫–∏–π –º—ñ–Ω—ñ–º—ñ–∑—É—î RSS.

–©–æ–± –∑–Ω–∞–π—Ç–∏ —Ü–µ–π –ø–æ–¥—ñ–ª, –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ

1. [–ø—Ä–µ–¥–∏–∫—Ç–æ—Ä]{.purple}, $\color{#6A5ACD}{\mathbf{x}_j}$
1. [cutoff]{.attn} $\color{#e64173}{s}$, —è–∫–∏–π —Ä–æ–∑–¥—ñ–ª—è—î $\color{#6A5ACD}{\mathbf{x}_j}$ –Ω–∞ –¥–≤—ñ —á–∞—Å—Ç–∏–Ω–∏: (1) $\color{#6A5ACD }{\mathbf{x}_j} < \color{#e64173}{s}$ —ñ (2) $\color{#6A5ACD}{\mathbf{x}_j} \ge \color{#e64173}{s} $

. . .

–®—É–∫–∞—é—á–∏ –≤ –∫–æ–∂–Ω–æ–º—É –∑ –Ω–∞—à–∏—Ö [–ø—Ä–µ–¥–∏–∫—Ç–æ—Ä]{.purple} $\color{#6A5ACD}{j}$ —ñ –≤—Å—ñ—Ö —ó—Ö–Ω—ñ—Ö [cutoff]{.attn} $\color{#e64173}{s}$,
<br>–º–∏ –≤–∏–±–∏—Ä–∞—î–º–æ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—é, —è–∫–∞ **–º—ñ–Ω—ñ–º—ñ–∑—É—î RSS**.

---

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

[–ü—Ä–∏–∫–ª–∞–¥]{.ex} –†–æ–∑–≥–ª—è–Ω–µ–º–æ –Ω–∞–±—ñ—Ä –¥–∞–Ω–∏—Ö

```{r, data-ex-split, echo = F}
ex_df = tibble(
  "i" = 1:3,
  "pred." = c(0, 0, 0),
  "y" = c(0, 8, 6),
  "x1" = c(1, 3, 5),
  "x2" = c(4, 2, 6)
)
ex_df %>%
  hux() %>%
  set_align(1:4, 1:5, "center") %>%
  set_bold(1, 1:5, T) %>%
  set_bold(2:4, 1:5, F) %>%
  set_bottom_border(1, c(1,3:5), 1) %>%
  set_text_color(1:4, 2, "white") %>% 
  set_width(0.5)
```

. . .

–õ–∏—à–µ –∑ —Ç—å–æ–º–∞ —Å–ø–æ—Ç—Å–µ—Ä–µ–∂–µ–Ω–Ω—è–º–∏ –∫–æ–∂–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –º–∞—î –ª–∏—à–µ –¥–≤–∞ —Ñ–∞–∫—Ç–∏—á–Ω–∏—Ö —Ä–æ–∑–±–∏—Ç—Ç—è

---

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

–û–¥–Ω–µ –º–æ–∂–ª–∏–≤–∏–µ —Ä–æ–∑–±–∏—Ç—Ç—è: x~1~ –Ω–∞ 2, —â–æ –¥–∞—î [(**1**) x~1~ < 2]{.purple} *vs.* [(**2**) xx~1~ ‚â• 2]{.pink}

```{r, ex-split1, echo = F}
split1 = ex_df %>%
  mutate("pred." = c(0, 7, 7)) %>%
  hux() %>%
  set_align(1:4, 1:5, "center") %>%
  set_bold(1, 1:5, T) %>%
  set_bottom_border(1, 1:5, 1) %>%
  set_text_color(2, 1:4, purple) %>%
  set_text_color(3:4, 1:4, red_pink)
split1 %>%
  set_text_color(1:4, 2, "white") %>%
  set_bottom_border(1, 2, 0) %>% 
  set_bold(2:4, 1:5, F) %>% 
  set_width(0.5)
```

---

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

–û–¥–Ω–µ –º–æ–∂–ª–∏–≤–∏–µ —Ä–æ–∑–±–∏—Ç—Ç—è: x~1~ –Ω–∞ 2, —â–æ –¥–∞—î [(**1**) x~1~ < 2]{.purple} *vs.* [(**2**) x~1~ ‚â• 2]{.pink}

```{r, ex-split1b, echo = F}
split1 = ex_df %>% mutate("pred." = c(0, 7, 7)) %>%
  hux() %>%
  set_align(1:4, 1:5, "center") %>%
  set_bold(1, 1:5, T) %>%
  set_bottom_border(1, 1:5, 1) %>%
  set_text_color(2, 1:4, purple) %>%
  set_text_color(3:4, 1:4, red_pink) %>%
  set_bold(1:4, 2, T)
split1 %>% set_width(0.5)
```

–¢–∞–∫–µ —Ä–æ–∑–±–∏—Ç—Ç—è –¥–∞—î RSS [0^2^]{.purple} + [1^2^]{.pink} + [(-1)^2^]{.pink} = 2.

[Note~1~]{.note} –†–æ–∑—â–µ–ø–ª–µ–Ω–Ω—è x~1~ –Ω–∞ 2 –¥–∞—î —Ç—ñ —Å–∞–º—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏, —â–æ –π 1,5, 2,5 ‚Äî –±—É–¥—å-—â–æ –≤ (1, 3).
<br>[Note~2~]{.note} –î–µ—Ä–µ–≤–∞ —á–∞—Å—Ç–æ —Ä–æ—Å—Ç—É—Ç—å, –¥–æ–∫–∏ –≤–æ–Ω–∏ –Ω–µ –¥–æ—Å—è–≥–Ω—É—Ç—å –ø–µ–≤–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å —É –ª–∏—Å—Ç—ñ.

------

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–µ –ø–æ–¥—ñ–ª: x~1~ –Ω–∞ 4, —â–æ –¥–∞—î [(**1**) x~1~ < 4]{.purple} *vs.* [(**2**) x~1~ ‚â• 4]{.pink}

```{r, ex-split2, echo = F}
ex_df %>% mutate("pred." = c(4, 4, 6)) %>%
  hux() %>%
  set_align(1:4, 1:5, "center") %>%
  set_bold(1, 1:5, T) %>%
  set_bottom_border(1, 1:5, 1) %>%
  set_text_color(2:3, 1:4, purple) %>%
  set_text_color(4, 1:4, red_pink) %>%
  set_bold(1:4, 2, T) %>% 
  set_width(0.5)
```

–¢–∞–∫–µ —Ä–æ–∑–±–∏—Ç—Ç—è –¥–∞—î RSS [(-4)^2^]{.purple} + [4^2^]{.pink} + [0^2^]{.pink} = 32.

. . .

*–†–∞–Ω—ã—à–µ:* –†–æ–∑–±–∏—Ç—Ç—è x~1~ –Ω–∞ 2 –¥–∞–ª–æ RSS = 2. [(*–ù–∞–±–∞–≥–∞—Ç–æ –∫—Ä–∞—â–µ*)]{.grey-light}

---

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

–Ü–Ω—à–∏–π –ø–æ–¥—ñ–ª: x~2~ –Ω–∞ 3, —â–æ –¥–∞—î [(**1**) x~1~ < 3]{.purple} *vs.* [(**2**) x~1~ ‚â• 3]{.pink}

```{r, ex-split3, echo = F}
ex_df %>% mutate("pred." = c(3, 8, 3)) %>%
  hux() %>%
  set_align(1:4, 1:5, "center") %>%
  set_bold(1, 1:5, T) %>%
  set_bottom_border(1, 1:5, 1) %>%
  set_text_color(c(2,4), c(1:3,5), red_pink) %>%
  set_text_color(3, c(1:3,5), purple) %>%
  set_bold(1:4, 2, T) %>% 
  set_width(0.5)
```

–¢–∞–∫–µ —Ä–æ–∑–±–∏—Ç—Ç—è –¥–∞—î RSS [(-3)^2^]{.pink} + [0^2^]{.purple} + [3^2^]{.pink} = 18.

---

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

–û—Å—Ç–∞—Ç–æ—á–Ω–∏–π –ø–æ–¥—ñ–ª: x~2~ –Ω–∞ 5, —â–æ –¥–∞—î [(**1**) x~1~ < 5]{.purple} *vs.* [(**2**) x~1~ ‚â• 5]{.pink}

```{r, ex-split4, echo = F}
ex_df %>% mutate("pred." = c(4, 4, 6)) %>%
  hux() %>%
  set_align(1:4, 1:5, "center") %>%
  set_bold(1, 1:5, T) %>%
  set_bottom_border(1, 1:5, 1) %>%
  set_text_color(2:3, c(1:3,5), purple) %>%
  set_text_color(4, c(1:3,5), red_pink) %>%
  set_bold(1:4, 2, T) %>% 
  set_width(0.5)
```

–¢–∞–∫–µ —Ä–æ–∑–±–∏—Ç—Ç—è –¥–∞—î RSS [(-4)^2^]{.pink} + [4^2^]{.purple} + [0^2^]{.pink} = 32.

---

## –ü—Ä–∏–∫–ª–∞–¥: —Ä–æ–∑–±–∏—Ç—Ç—è

–°–µ—Ä–µ–¥ –Ω–∞—à–∏—Ö —á–æ—Ç–∏—Ä—å–æ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –ø–æ–¥—ñ–ª—ñ–≤ (–ø–æ –¥–≤—ñ –∑–º—ñ–Ω–Ω—ñ –∑ –¥–≤–æ–º–∞ –ø–æ–¥—ñ–ª–∞–º–∏)

- x~1~ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º 2: **RSS** = 2
- x~1~ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º 4: **RSS** = 32
- x~2~ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º 3: **RSS** = 18
- x~2~ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º 5: **RSS** = 32

–†–æ–∑–±–∏—Ç—Ç—è x~1~ –Ω–∞ 2 –≥–µ–Ω–µ—Ä—É—î –Ω–∞–π–Ω–∏–∂—á–∏–π RSS.

---

<br>
<br>
[–ü—Ä–∏–º—ñ—Ç–∫–∞:]{.note} –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ñ –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–∏ –ø—Ä–∞—Ü—é—é—Ç—å —Ç–æ—á–Ω–æ —Ç–∞–∫ —Å–∞–º–æ.
<br>–ú–∏ —Ö–æ—á–µ–º–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ **—É—Å—ñ –º–æ–∂–ª–∏–≤—ñ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó** –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.

[Ex:]{.ex} –î–ª—è —á–æ—Ç–∏—Ä–∏—Ä—ñ–≤–Ω–µ–≤–æ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–∏–∫–∞—Ç–æ—Ä–∞ (—Ä—ñ–≤–Ω—ñ: A, B, C, D)

:::: {.columns}

::: {.column}
- –°–ø–ª—ñ—Ç 1: [A|B|C]{.pink} *vs.* [D]{.purple}
- –°–ø–ª—ñ—Ç 2: [A|B|D]{.pink} *vs.* [C]{.purple}
- –°–ø–ª—ñ—Ç 3: [A|C|D]{.pink} *vs.* [B]{.purple}
- –°–ø–ª—ñ—Ç 4: [B|C|D]{.pink} *vs.* [A]{.purple}
:::

::: {.column}
- –°–ø–ª—ñ—Ç 5: [A|B]{.pink} *vs.* [C|D]{.purple}
- –°–ø–ª—ñ—Ç 6: [A|C]{.pink} *vs.* [B|D]{.purple}
- –°–ø–ª—ñ—Ç 7: [A|D]{.pink} *vs.* [B|C]{.purple}
:::

::::

–Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ 7 –º–æ–∂–ª–∏–≤–∏—Ö —Ä–æ–∑–¥—ñ–ª–µ–Ω—å.

---

## –ë—ñ–ª—å—à–µ –ø–æ–¥—ñ–ª—ñ–≤

–ö–æ–ª–∏ –º–∏ —Ä–æ–±–∏–º–æ –Ω–∞—à —Å–ø–ª—ñ—Ç, –º–∏ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Ä–æ–∑–¥—ñ–ª—è—Ç–∏,
<br>**—É–º–æ–≤–Ω–æ** –Ω–∞ –æ–±–ª–∞—Å—Ç—ñ –∑ –Ω–∞—à–∏—Ö –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ–¥—ñ–ª—ñ–≤.

–û—Ç–∂–µ, —è–∫—â–æ –Ω–∞—à–µ –ø–µ—Ä—à–µ —Ä–æ–∑–±–∏—Ç—Ç—è —Å—Ç–≤–æ—Ä—é—î R~1~ —ñ R~2~, —Ç–æ –Ω–∞—à–µ –Ω–∞—Å—Ç—É–ø–Ω–µ —Ä–æ–∑–±–∏—Ç—Ç—è
<br>—à—É–∫–∞—î –≤ –ø—Ä–æ—Å—Ç–æ—Ä—ñ –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ñ–≤ –ª–∏—à–µ –≤ R~1~ –∞–±–æ R~2~.

. . .

–î–µ—Ä–µ–≤–æ –ø—Ä–æ–¥–æ–≤–∂—É—î **—Ä–æ—Å—Ç–∏, –¥–æ–∫–∏** –≤–æ–Ω–æ –Ω–µ –¥–æ—Å—è–≥–Ω–µ –ø–µ–≤–Ω–æ–≥–æ –ø–æ—Ä–æ–≥—É,
<br>_–Ω–∞–ø—Ä–∏–∫–ª–∞–¥_, —â–æ–Ω–∞–π–±—ñ–ª—å—à–µ 5 —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å –Ω–∞ –∫–æ–∂–Ω–æ–º—É –ª–∏—Å—Ç—ñ.

---

## –ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –ø–æ–¥—ñ–ª—ñ–≤

–ú–æ–∂–Ω–∞ –º–∞—Ç–∏ –∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –ø–æ–¥—ñ–ª—ñ–≤

[Q]{.qa} –ß–æ–º—É?

[A]{.qa} "–ë—ñ–ª—å—à–µ —Ä–æ–∑–¥—ñ–ª–µ–Ω—å" –æ–∑–Ω–∞—á–∞—î

1. –±—ñ–ª—å—à–µ –≥–Ω—É—á–∫–æ—Å—Ç—ñ (–ø–æ–¥—É–º–∞–π—Ç–µ –ø—Ä–æ –∫–æ–º–ø—Ä–æ–º—ñ—Å bias-variance/overfitting)
1. –º–µ–Ω—à–∞ —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–∏–≤–Ω—ñ—Å—Ç—å (–æ–¥–Ω–∞ –∑ –ø–µ—Ä–µ–≤–∞–≥ –¥–µ—Ä–µ–≤)

. . .

[Q]{.qa} –û—Ç–∂–µ, —â–æ –º–∏ –º–æ–∂–µ–º–æ –∑—Ä–æ–±–∏—Ç–∏?

. . .

[A]{.qa} –û–±—Ä—ñ–∑–∞–π—Ç–µ —Å–≤–æ—ó –¥–µ—Ä–µ–≤–∞!

---

## –û–±—Ä—ñ–∑–∞–Ω–Ω—è

[–û–±—Ä—ñ–∑–∞–Ω–Ω—è]{.attn} –¥–æ–∑–≤–æ–ª—è—î –Ω–∞–º "–∑—Ç–∏—Å–Ω—É—Ç–∏" –Ω–∞—à—ñ –¥–µ—Ä–µ–≤–∞ –¥–æ —ó—Ö ¬´–Ω–∞–π–∫—Ä–∞—â–æ–≥–æ –≤–∏–≥–ª—è–¥—É¬ª.

[–Ü–¥–µ—è:]{.note} –î–µ—è–∫—ñ –æ–±–ª–∞—Å—Ç—ñ –º–æ–∂—É—Ç—å –∑–±—ñ–ª—å—à–∏—Ç–∏ [–≤–∞—Ä—ñ–∞—Ü—ñ—é]{.hi} –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –∑–º–µ–Ω—à–∏—Ç–∏ [–∑–º—ñ—â–µ–Ω–Ω—è]{.hi}.
<br> –í–∏–¥–∞–ª—è—é—á–∏ —Ü—ñ –æ–±–ª–∞—Å—Ç—ñ, –º–∏ –≤–∏–≥—Ä–∞—î–º–æ –≤ —Ç–µ—Å—Ç–æ–≤—ñ–π MSE.

[–ö–∞–Ω–¥–∏–¥–∞—Ç–∏ –Ω–∞ —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è:]{.note} –æ–±–ª–∞—Å—Ç—ñ, —è–∫—ñ –Ω–µ –¥—É–∂–µ —Å–∏–ª—å–Ω–æ **–∑–º–µ–Ω—à—É—é—Ç—å RSS**.

. . .

[–û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è:]{.note} –í–∏—Ä–æ—â—É–π—Ç–µ –≤–µ–ª–∏–∫—ñ –¥–µ—Ä–µ–≤–∞ $T_0$, –∞ –ø–æ—Ç—ñ–º –æ–±—Ä—ñ–∑–∞–π—Ç–µ $T_0$ –¥–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ [–ø—ñ–¥–¥–µ—Ä–µ–≤–∞]{.attn}.

. . .

[–û–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞:]{.note} –†–æ–∑–≥–ª—è–¥ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –ø—ñ–¥–¥–µ—Ä–µ–≤ –º–æ–∂–µ –∫–æ—à—Ç—É–≤–∞—Ç–∏ –¥–æ—Ä–æ–≥–æ.

---

## –û–±—Ä—ñ–∑–∞–Ω–Ω—è

[Cost-complexity pruning]{.attn}[^üå≤] –ø—Ä–æ–ø–æ–Ω—É—î —Ä—ñ—à–µ–Ω–Ω—è.

[^üå≤]: –¢–∞–∫–æ–∂ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è: *weakest-link pruning*.

–¢–∞–∫ —Å–∞–º–æ, —è–∫ –º–∏ —Ä–æ–±–∏–ª–∏ –∑ –ª–∞—Å–æ, [cost-complexity pruning]{.attn} –∑–º—É—à—É—î –¥–µ—Ä–µ–≤–æ –ø–ª–∞—Ç–∏—Ç–∏ —Ü—ñ–Ω—É (—à—Ç—Ä–∞—Ñ), –∑–∞ —Å–∫–ª–∞–¥–Ω—ã—Å—Ç—å.

*–°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å* —Ç—É—Ç –≤–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è —è–∫ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–±–ª–∞—Å—Ç–µ–π $|T|$.

---

## –û–±—Ä—ñ–∑–∞–Ω–Ω—è

–ó–æ–∫—Ä–µ–º–∞, [cost-complexity pruning]{.attn} –¥–æ–¥–∞—î —à—Ç—Ä–∞—Ñ $\alpha |T|$ –¥–æ RSS, _—Ç–æ–±—Ç–æ_,

$$
\begin{align}
  \sum_{m=1}^{|T|} \sum_{i:x\in R_m} \left( y_i - \hat{y}_{R_m} \right)^2 + \alpha |T|
\end{align}
$$

–î–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è $\alpha (\ge 0)$ –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –ø—ñ–¥–¥–µ—Ä–µ–≤–æ $T\subset T_0$.

. . .

$\alpha = 0$ –≥–µ–Ω–µ—Ä—É—î $T_0$, –∞–ª–µ –∑—ñ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è–º $\alpha$ –º–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –∑—Ä—ñ–∑–∞—Ç–∏ –¥–µ—Ä–µ–≤–æ.

. . .

–ú–∏ –≤–∏–±–∏—Ä–∞—î–º–æ $\alpha$ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Ö—Ä–µ—Å–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.

# –î–µ—Ä–µ–≤–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó

## –î–µ—Ä–µ–≤–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó

–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –¥–µ—Ä–µ–≤ –¥—É–∂–µ —Å—Ö–æ–∂–∞ –Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—é.

:::: {.columns}

::: {.column}
[–î–µ—Ä–µ–≤–∞ —Ä–µ–≥—Ä–µ—Å—ñ—ó]{.hi-purple}

- [–ü—Ä–æ–≥–Ω–æ–∑:]{.hi-slate} –°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è –æ–±–ª–∞—Å—Ç—ñ
- [–ü–æ–¥—ñ–ª:]{.hi-slate} –ó–º–µ–Ω—à–µ–Ω–Ω—è RSS
- [–û–±—Ä—ñ–∑–∞–Ω–Ω—è:]{.hi-slate} –®—Ç—Ä–∞—Ñ–Ω–∏–π RSS
:::

::: {.column}
[–î–µ—Ä–µ–≤–∞ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó]{.hi-pink}

- [–ü—Ä–æ–≥–Ω–æ–∑:]{.hi-slate} –ú–æ–¥–∞ –æ–±–ª–∞—Å—Ç—ñ
- [–ü–æ–¥—ñ–ª:]{.hi-slate} –ú—ñ–Ω. –î–∂–∏–Ω—ñ –∞–±–æ –µ–Ω—Ç—Ä–æ–ø—ñ—è[^üå≤]
- [–û–±—Ä—ñ–∑–∞–Ω–Ω—è:]{.hi-slate} –®—Ç—Ä–∞—Ñ —á–∞—Å—Ç–æ—Ç–∏ –ø–æ–º–∏–ª–æ–∫[^üå¥]
:::

::::

–î–æ–¥–∞—Ç–∫–æ–≤–∏–π –Ω—é–∞–Ω—Å –¥–ª—è [–¥–µ—Ä–µ–≤–∞ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó]{.attn}: –º–∏ –∑–∞–∑–≤–∏—á–∞–π –¥–±–∞—î–º–æ –ø—Ä–æ **–ø—Ä–æ–ø–æ—Ä—Ü—ñ—ó –∫–ª–∞—Å—ñ–≤ —É –ª–∏—Å—Ç–∫–∞—Ö**, –∞ –Ω–µ –ª–∏—à–µ –ø—Ä–æ –æ—Å—Ç–∞—Ç–æ—á–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑.

[^üå≤]: –í–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É —Å–ª–∞–π–¥—ñ.
[^üå¥]: ...–∞–±–æ —ñ–Ω–¥–µ–∫—Å –î–∂–∏–Ω—ñ –∞–±–æ –µ–Ω—Ç—Ä–æ–ø—ñ—è

## –Ü–Ω–¥–µ–∫—Å –î–∂–∏–Ω—ñ

–ù–µ—Ö–∞–π $\hat{p}_{mk}$ –ø–æ–∑–Ω–∞—á–∞—î —á–∞—Å—Ç–∫—É —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å —É –∫–ª–∞—Å—ñ $k$ —ñ –æ–±–ª–∞—Å—Ç—å $m$.

. . .

[–Ü–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ]{.attn} –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞–º –ø—Ä–æ ¬´—á–∏—Å—Ç–æ—Ç—É¬ª –æ–±–ª–∞—Å—Ç—ñ

$$
\begin{align}
   G = \sum_{k=1}^{K} \hat{p}_{mk} \left( 1 - \hat{p}_{mk} \right)
\end{align}
$$
—è–∫—â–æ –æ–±–ª–∞—Å—Ç—å –¥—É–∂–µ –æ–¥–Ω–æ—Ä—ñ–¥–Ω–∞, —Ç–æ —ñ–Ω–¥–µ–∫—Å –î–∂–∏–Ω—ñ –±—É–¥–µ –º–∞–ª–∏–º.

–û–¥–Ω–æ—Ä—ñ–¥–Ω—ñ –æ–±–ª–∞—Å—Ç—ñ –ª–µ–≥—à–µ –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏.
<br>–ó–º–µ–Ω—à–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É –î–∂–∏–Ω—ñ –¥–∞—î –∑–º–æ–≥—É –æ—Ç—Ä–∏–º–∞—Ç–∏ –±—ñ–ª—å—à –æ–¥–Ω–æ—Ä—ñ–¥–Ω—ñ —Ä–µ–≥—ñ–æ–Ω–∏
<br>‚à¥ –ú–∏ —Ö–æ—á–µ–º–æ –º—ñ–Ω—ñ–º—ñ–∑—É–≤–∞—Ç–∏ —ñ–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ.

---

[**–î–∂–∏–Ω—ñ —è–∫ —Ñ—É–Ω–∫—Ü—ñ—è '—á–∏—Å—Ç–æ—Ç–∏'**]{.pink}

```{r, plot-gini, echo = F}
# Calculate Gini
g_dt = tibble(
  p = seq(0, 1, 0.01),
  G = p * (1-p)
)
# Plot it
ggplot(
  data = g_dt,
  aes(x = p, y = G)
) +
geom_hline(yintercept = 0, size = 1/4) +
geom_vline(xintercept = 0, size = 1/4) +
geom_line(color = red_pink, size = 2) +
scale_x_continuous("'Purity'") +
scale_y_continuous("Gini") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book")
```

---

## –ï–Ω—Ç—Ä–æ–ø—ñ—è

–ù–µ—Ö–∞–π $\hat{p}_{mk}$ –ø–æ–∑–Ω–∞—á–∞—î —á–∞—Å—Ç–∫—É —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å —É –∫–ª–∞—Å—ñ $k$ —ñ —Ä–µ–≥—ñ–æ–Ω—ñ $m$.

[–ï–Ω—Ç—Ä–æ–ø—ñ—è]{.attn} —Ç–∞–∫–æ–∂ –≤–∏–º—ñ—Ä—é—î "—á–∏—Å—Ç–æ—Ç—É" –≤—É–∑–ª–∞/–ª–∏—Å—Ç–∫–∞

$$
\begin{align}
  D = - \sum_{k=1}^{K} \hat{p}_{mk} \log \left( \hat{p}_{mk} \right)
\end{align}
$$

[–ï–Ω—Ç—Ä–æ–ø—ñ—è]{.attn} —Ç–∞–∫–æ–∂ –º—ñ–Ω—ñ–º—ñ–∑—É—î—Ç—å—Å—è, –∫–æ–ª–∏ –∑–Ω–∞—á–µ–Ω–Ω—è $\hat{p}_{mk}$ –±–ª–∏–∑—å–∫—ñ –¥–æ 0 —ñ 1.

---

[**–ï–Ω—Ç—Ä–æ–ø—ñ—è —è–∫ —Ñ—É–Ω–∫—Ü—ñ—è '—á–∏—Å—Ç–æ—Ç–∏'**]{.pink}

```{r, plot-entropy, echo = F}
# Calculate Gini
e_dt = tibble(
  p = seq(0.01, 1, 0.01),
  G = - p * log(p)
)
# Plot it
ggplot(
  data = e_dt,
  aes(x = p, y = G)
) +
geom_hline(yintercept = 0, size = 1/4) +
geom_vline(xintercept = 0, size = 1/4) +
geom_line(color = red_pink, size = 2) +
scale_x_continuous("'Purity'") +
scale_y_continuous("Entropy") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book")
```

---

## –†–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å

[Q]{.qa} –ß–æ–º—É –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ –∞–±–æ –µ–Ω—Ç—Ä–æ–ø—ñ—é (*vs.* —á–∞—Å—Ç–æ—Ç–∞ –ø–æ–º–∏–ª–æ–∫)?

. . .

[A]{.qa} –ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–º–∏–ª–æ–∫ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —á—É—Ç–ª–∏–≤–∞, —â–æ–± –≤–∏—Ä–æ—Å—Ç–∏—Ç–∏ —Ö–æ—Ä–æ—à—ñ –¥–µ—Ä–µ–≤–∞.
<br> –Ü–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ —Ç–∞ –µ–Ω—Ç—Ä–æ–ø—ñ—è –≥–æ–≤–æ—Ä—è—Ç—å –Ω–∞–º –ø—Ä–æ **–∫–æ–º–ø–æ–∑–∏—Ü—ñ—é** –ª–∏—Å—Ç–∞.

. . .

[–ü—Ä–∏–∫–ª–∞–¥]{.ex} –†–æ–∑–≥–ª—è–Ω–µ–º–æ –¥–≤–∞ —Ä—ñ–∑–Ω–∏—Ö –ª–∏—Å—Ç–∫–∞ –≤ —Ç—Ä–∏—Ä—ñ–≤–Ω–µ–≤—ñ–π –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó.

:::: {.columns}

::: {.column }
**–õ–∏—Å—Ç–æ–∫ 1**

- **A:** 51, **B:** 49, **C:** 00
- [–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–º–∏–ª–æ–∫:]{.hi-orange} 49%
- [–Ü–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ:]{.hi-purple} 0,4998
- [–ï–Ω—Ç—Ä–æ–ø—ñ—è:]{.hi-pink} 0,6929
:::

::: {.column}
**–õ–∏—Å—Ç–æ–∫ 2**

- **A:** 51, **B:** 25, **C:** 24
- [–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–º–∏–ª–æ–∫:]{.hi-orange} 49%
- [–Ü–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ:]{.hi-purple} 0,6198
- [–ï–Ω—Ç—Ä–æ–ø—ñ—è:]{.hi-pink} 1,0325
:::

::::

[–Ü–Ω–¥–µ–∫—Å –î–∂—ñ–Ω—ñ]{.hi-purple} —Ç–∞ [–µ–Ω—Ç—Ä–æ–ø—ñ—è]{.hi-pink} –≥–æ–≤–æ—Ä—è—Ç—å –Ω–∞–º –ø—Ä–æ —Ä–æ–∑–ø–æ–¥—ñ–ª.

# –ü–æ–±—É–¥–æ–≤–∞ –¥–µ—Ä–µ–≤ —Ä—ñ—à–µ–Ω—å –≤ R

## –ü–æ–±—É–¥–æ–≤–∞ –¥–µ—Ä–µ–≤ —Ä—ñ—à–µ–Ω—å –≤ R

–©–æ–± –Ω–∞–≤—á–∏—Ç–∏ –¥–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å —É R, –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ `parsnip`, —è–∫–∏–π —Å–ø–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ `rpart`.

–£ `parsnip` –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é `decision_tree()`.

. . .

–ú–æ–¥–µ–ª—å `decision_tree()` (–∑ –º–µ—Ö–∞–Ω—ñ–∑–º–æ–º `rpart`) –ø–æ—Ç—Ä–µ–±—É—î —á–æ—Ç–∏—Ä—å–æ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤:

- `mode`: `"regression"` –∞–±–æ `"classification"`
- `cost_complexity`: —à—Ç—Ä–∞—Ñ –∑–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å
- `tree_depth`: *–º–∞–∫—Å.* –≥–ª–∏–±–∏–Ω–∞ –¥–µ—Ä–µ–≤–∞ (–º–∞–∫—Å. –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∑–¥—ñ–ª–µ–Ω—å —É ¬´–≥—ñ–ª—Ü—ñ¬ª)
- `min_n`: *–º—ñ–Ω.* –∫-—Ç—å —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å –¥–ª—è –≤—É–∑–ª–∞, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏

---

```{r, train-decision-tree, cache = T}
# CV split
set.seed(12345)
default_cv = default_df %>% vfold_cv(v = 5)
# –î–µ—Ä–µ–≤–æ —Ä—ñ—à–µ–Ω—å
default_tree = decision_tree(
  mode = "classification",
  cost_complexity = tune(),
  tree_depth = tune(),
  min_n = 10 # –î–æ–≤—ñ–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä ¬´10¬ª
) %>% set_engine("rpart")
# –í–∏–∑–Ω–∞—á–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç
default_recipe = recipe(default ~ ., data = default_df)
# –í–∏–∑–Ω–∞—á—Ç–µ —Ä–æ–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å
default_flow = workflow() %>%
  add_model(default_tree) %>% add_recipe(default_recipe)
# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è!
default_cv_fit = default_flow %>% tune_grid(
  default_cv,
  grid = expand_grid(
    cost_complexity = seq(0, 0.15, by = 0.01),
    tree_depth = c(1, 2, 5, 10),
  ),
  metrics = metric_set(accuracy, roc_auc)
)
```

---

**–¢–æ—á–Ω—ñ—Å—Ç—å, —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —ñ –≥–ª–∏–±–∏–Ω–∞**

```{r, plot-cv-cp, echo = F}
ggplot(
  data = default_cv_fit %>% collect_metrics() %>% filter(.metric == "accuracy"),
  aes(
    x = cost_complexity,
    y = mean,
    color = tree_depth %>% factor(levels = c(1,2,5,10), ordered = T),
    shape = tree_depth %>% factor(levels = c(1,2,5,10), ordered = T)
  )
) +
geom_line(size = 0.4) +
geom_point(size = 3, alpha = 0.8) +
scale_y_continuous("Accuracy") +
scale_x_continuous("Cost complexity") +
scale_color_viridis_d("Tree depth") +
scale_shape_manual("Tree depth", values = c(1, 18, 15, 20)) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

**ROC AUC, —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —ñ –≥–ª–∏–±–∏–Ω–∞**

```{r, plot-cv-auc, echo = F}
ggplot(
  data = default_cv_fit %>% collect_metrics() %>% filter(.metric == "roc_auc"),
  aes(
    x = cost_complexity,
    y = mean,
    color = tree_depth %>% factor(levels = c(1,2,5,10), ordered = T),
    shape = tree_depth %>% factor(levels = c(1,2,5,10), ordered = T)
  )
) +
geom_line(size = 0.4) +
geom_point(size = 4, alpha = 0.8) +
scale_y_continuous("ROC AUC") +
scale_x_continuous("Cost complexity") +
scale_color_viridis_d("Tree depth") +
scale_shape_manual("Tree depth", values = c(1, 18, 15, 20)) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

[**–©–æ–± –ø–æ–±—É–¥—É–≤–∞—Ç–∏ –¥–µ—Ä–µ–≤–æ, –≤–∏–±—Ä–∞–Ω–µ CV...**]{.slate}

1\. [**Fit**]{.pink} –æ–±—Ä–∞–Ω–∞/–Ω–∞–π–∫—Ä–∞—â–∞ –º–æ–¥–µ–ª—å.

```{r, plot-tree-1}
best_flow = 
  default_flow %>% 
  finalize_workflow(select_best(default_cv_fit, metric = "accuracy")) %>%
  fit(data = default_df)
```

2\. [**–í–∏—Ç—è–≥—ñ—Ç—å**]{.purple} –ø—ñ–¥—ñ–≥–Ω–∞–Ω—É –º–æ–¥–µ–ª—å, *–Ω–∞–ø—Ä–∏–∫–ª–∞–¥,*, –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é `extract_fit_parsnip`.
<br> [–°—Ç–∞—Ä–∏–π/–∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π —Å–ø–æ—Å—ñ–±:]{.note} `pull_workflow_fit()`

```{r, plot-tree-2}
best_tree = best_flow %>% extract_fit_parsnip()
```

3\. [**–ì—Ä–∞—Ñ—ñ–∫**]{.orange} –¥–µ—Ä–µ–≤–∞, *–Ω–∞–ø—Ä–∏–∫–ª–∞–¥,*, –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é `rpart.plot()` –∑ `rpart.plot`.

```{r, plot-tree-3, eval = F}
best_tree$fit %>% rpart.plot()
```

---

```{r, plot-rpart-cv, echo = F}
rpart.plot(
  best_tree$fit,
  extra = 104,
  box.palette = "Oranges",
  branch.lty = 3,
  shadow.col = "gray",
  nn = TRUE,
  cex = 1.3
)
```

---

<br>
<br>
<br>
<br>
<br>

–ü–æ–ø–µ—Ä–µ–¥–Ω—î –¥–µ—Ä–µ–≤–æ –º–∞—î –≤–∞—Ä—Ç—ñ—Å—Ç—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ 0,03 (—ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –≥–ª–∏–±–∏–Ω—É 5).

–ú–∏ –º–æ–∂–µ–º–æ –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ü–µ ¬´–Ω–∞–π–∫—Ä–∞—â–µ¬ª –¥–µ—Ä–µ–≤–æ –∑ –º–µ–Ω—à –æ–±—Ä—ñ–∑–∞–Ω–∏–º/–æ—à—Ç—Ä–∞—Ñ–æ–≤–∞–Ω–∏–º –¥–µ—Ä–µ–≤–æ–º

- `cost_complexity = 0,005`
- `tree_depth = 5`

---

```{r, plot-tree_complex, echo = F}
tree_complex = decision_tree(
  mode = "classification",
  cost_complexity = 0.005,
  tree_depth = 5,
  min_n = 10
) %>% set_engine(
  "rpart"
) %>% fit(default ~ ., data = default_df)
rpart.plot(
  tree_complex$fit,
  extra = 104,
  box.palette = "Oranges",
  branch.lty = 3,
  shadow.col = "gray",
  nn = TRUE,
  cex = 1.2
)
```

---

<br>
<br>
<br>
<br>
<br>

–©–æ, —è–∫—â–æ –º–∏ –∑–∞–ª–∏—à–∏–º–æ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –≤–∞—Ä—Ç–æ—Å—Ç—ñ –ø–æ—Å—Ç—ñ–π–Ω–æ—é, –∞–ª–µ –∑–±—ñ–ª—å—à–∏–º–æ –º–∞–∫—Å. –≥–ª–∏–±–∏–Ω–∞?

- `cost_complexity = 0,005`
- `tree_depth = 10` (–∑–±—ñ–ª—å—à–µ–Ω–æ –∑ `5`)

---

```{r, plot-tree_complexer, echo = F}
tree_complexer = decision_tree(
  mode = "classification",
  cost_complexity = 0.005,
  tree_depth = 10,
  min_n = 10
) %>% set_engine(
  "rpart"
) %>% fit(default ~ ., data = default_df)
rpart.plot(
  tree_complexer$fit,
  extra = 104,
  box.palette = "Oranges",
  branch.lty = 3,
  shadow.col = "gray",
  nn = TRUE,
  cex = 1.2
)
```

---

<br>
<br>
<br>
<br>
<br>

–©–æ, —è–∫—â–æ –º–∏ –∑–±—ñ–ª—å—à–∏–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ?

- `cost_complexity = 0,1` (–∑–±—ñ–ª—å—à–µ–Ω–æ –∑ `0,005`)
- `tree_depth = 10`

---

```{r, plot-tree_simple, echo = F}
tree_simple = decision_tree(
  mode = "classification",
  cost_complexity = 0.1,
  tree_depth = 10,
  min_n = 10
) %>% set_engine(
  "rpart"
) %>% fit(default ~ ., data = default_df)
rpart.plot(
  tree_simple$fit,
  extra = 104,
  box.palette = "Oranges",
  branch.lty = 3,
  shadow.col = "gray",
  nn = TRUE,
  cex = 1.2
)
```

---

<br>
<br>
<br>

[Q]{.qa} –Ø–∫ –¥–µ—Ä–µ–≤–∞ –ø–æ—Ä—ñ–≤–Ω—é—é—Ç—å—Å—è –∑ –ª—ñ–Ω—ñ–π–Ω–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏?

. . .

[A]{.tran} –¶–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–æ–≥–æ, –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –ª—ñ–Ω—ñ–π–Ω–∞ —ñ—Å—Ç–∏–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è.

---

**–õ—ñ–Ω—ñ–π–Ω–∞ –º–µ–∂–∞:** –¥–µ—Ä–µ–≤–∞ –Ω–∞–º–∞–≥–∞—é—Ç—å—Å—è –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –ª—ñ–Ω—ñ—é.

```{r, fig-compare-linear, echo = F}
knitr::include_graphics("img/compare-linear.png")
```

---

**–ù–µ–ª—ñ–Ω—ñ–π–Ω–∞ –º–µ–∂–∞:** –¥–µ—Ä–µ–≤–∞ –ª–µ–≥–∫–æ –ø–æ–≤—Ç–æ—Ä—é—é—Ç—å –Ω–µ–ª—ñ–Ω—ñ–π–Ω—É –º–µ–∂—É.

```{r, fig-compare-nonlinear, echo = F}
knitr::include_graphics("img/compare-nonlinear.png")
```

# –ü–µ—Ä–µ–≤–∞–≥–∏ —Ç–∞ –Ω–µ–¥–æ–ª—ñ–∫–∏

## –ü–µ—Ä–µ–≤–∞–≥–∏ —Ç–∞ –Ω–µ–¥–æ–ª—ñ–∫–∏

–Ø–∫ —ñ –≤ –±—É–¥—å-—è–∫–æ–º—É —ñ–Ω—à–æ–º—É –º–µ—Ç–æ–¥—ñ, –¥–µ—Ä–µ–≤–∞ —Ä—ñ—à–µ–Ω—å –º–∞—é—Ç—å –∫–æ–º–ø—Ä–æ–º—ñ—Å–∏.

:::: {.columns}

::: {.column}
[**–°–∏–ª—å–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏**]{.purple}
<br>[**+** –õ–µ–≥–∫–æ –ø–æ—è—Å–Ω—é—î—Ç—å—Å—è/—ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç—É—î—Ç—å—Å—è
<br>**+** –í–∫–ª—é—á–∞—î –∫—ñ–ª—å–∫–∞ –≥—Ä–∞—Ñ—ñ—á–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
<br>**+** –î–∑–µ—Ä–∫–∞–ª–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ä—ñ—à–µ–Ω—å –ª—é–¥–∏–Ω–æ—é?
<br>**+** –ü—Ä–∞—Ü—é—Ç—å –∑ –∫–∞—Ç–µ–≥–æ—Ä —Ç–∞ —á–∏—Å–ª. –∑–º—ñ–Ω[^üå≥].]{.purple}
:::

::: {.column}
[**–°–ª–∞–±–∫—ñ —Å—Ç–æ—Ä–æ–Ω–∏**
<br>**-** –Ü–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∫—Ä–∞—â—ñ
<br>**-** –ë–æ—Ä–æ—Ç—å–±–∞ –∑ –ª—ñ–Ω—ñ–π–Ω—ñ—Å—Ç—é
<br>**-** –ú–æ–∂–µ –±—É—Ç–∏ –¥—É–∂–µ "–Ω–µ —Ä–æ–±–∞—Å—Ç–∏–º–∏"]{.pink}
:::

::::

[–ù–µ —Ä–æ–±–∞—Å—Ç—ñ:]{.attn} –ù–µ–≤–µ–ª–∏–∫—ñ –∑–º—ñ–Ω–∏ –¥–∞–Ω–∏—Ö –º–æ–∂—É—Ç—å —Å–ø—Ä–∏—á–∏–Ω–∏—Ç–∏ –∑–Ω–∞—á–Ω—ñ –∑–º—ñ–Ω–∏ –≤ –Ω–∞—à–æ–º—É –¥–µ—Ä–µ–≤—ñ.

[^üå≥]: –ù–µ –º–∞—î –ø–æ—Ç—Ä–µ–±–∏ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ñ—ñ–∫—Ç–∏–≤–Ω—ñ –∑–º—ñ–Ω–Ω—ñ

# –î—è–∫—É—é –∑–∞ —É–≤–∞–≥—É! {.unnumbered .unlisted}

<br>
<br>

`r fa("telegram")` [Data Mirosh](https://t.me/araprof)

`r fa("github")` [\@aranaur](https://github.com/Aranaur)

`r fa("envelope")` ihor.miroshnychenko\@kneu.ua

`r fa("linkedin")` [\@ihormiroshnychenko](https://www.linkedin.com/in/ihormiroshnychenko/)

`r fa("house")` [aranaur.rbind.io](https://aranaur.rbind.io)
