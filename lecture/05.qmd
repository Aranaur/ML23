---
title: "05 - –ó–∞–¥–∞—á–∞ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó: –ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è"
subtitle: "Machine Learning"
author: "–Ü–≥–æ—Ä –ú—ñ—Ä–æ—à–Ω–∏—á–µ–Ω–∫–æ"
date: today
date-format: iso
institute: –ö–ù–ï–£::–Ü–Ü–¢–ï
crossref:
  fig-title: –†–∏—Å.     # (default is "Figure")
  tbl-title: –¢–∞–±.     # (default is "Table")
format:
  revealjs: 
    
    theme: [simple, custom.scss]
    # footer: <https://t.me/araprof>
    logo: img/logo.png
    chalkboard: true
    slide-number: true
    toc: true
    toc-title: –ó–ú–Ü–°–¢
    transition: fade
    mouse-wheel: true
    highlight-style: github
    mainfont: metropolis
    toc-depth: 1
    fig-width: 9
    fig-height: 5
filters:
  - line-highlight
    
knitr: 
  opts_chunk: 
    echo: true
    warnings: false
    message: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

library(pacman)
p_load(
  ISLR,
  broom, tidyverse,
  ggplot2, ggthemes, ggforce, ggridges, cowplot, scales,
  latex2exp, viridis, extrafont, gridExtra, plotly, ggformula,
  kableExtra, DT,
  data.table, dplyr, snakecase, janitor,
  lubridate, knitr, future, furrr,
  MASS, estimatr, caret, tidymodels, glmnet,
  huxtable, here, magrittr, parallel, fontawesome
)


# Define colors
red_pink   = "#e64173"
turquoise  = "#20B2AA"
orange     = "#FFA500"
red        = "#fb6107"
blue       = "#181485"
navy       = "#150E37FF"
green      = "#8bb174"
yellow     = "#D8BD44"
grey_light = "grey70"
grey_mid   = "grey50"
grey_dark  = "grey20"
purple     = "#6A5ACD"
slate      = "#314f4f"
```

# –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è

## –í—Å—Ç—É–ø

[–ü—Ä–æ–±–ª–µ–º–∏ —Ä–µ–≥—Ä–µ—Å—ñ—ó]{.attn} –Ω–∞–º–∞–≥–∞—é—Ç—å—Å—è –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ —á–∏—Å–ª–æ, —è–∫–µ –º–∞—Ç–∏–º–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ (_–Ω–∞–ø—Ä–∏–∫–ª–∞–¥_, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ç—ñ–≤), –¥—ñ–π—Å–Ω—ñ (*–Ω–∞–ø—Ä–∏–∫–ª–∞–¥*, –Ω–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É) —Ç–æ—â–æ...

. . .

[–ü—Ä–æ–±–ª–µ–º–∏ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó]{.attn} –Ω–∞—Ç–æ–º—ñ—Å—Ç—å –ø—Ä–∞–≥–Ω—É—Ç—å –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É

- **–î–≤—ñ–π–∫–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏**<br>—É—Å–ø—ñ—Ö/–Ω–µ–≤–¥–∞—á–∞; –ø—Ä–∞–≤–¥–∞/–Ω–µ–ø—Ä–∞–≤–¥–∞; A –∞–±–æ B; –∫—ñ—Ç –∞–±–æ –Ω–µ –∫—ñ—Ç; _—Ç–æ—â–æ_

- **–ú—É–ª—å—Ç–∏–∫–ª–∞—Å–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏**<br>—Ç–∞–∫, –Ω—ñ, *–∞–±–æ –º–æ–∂–ª–∏–≤–æ*; –∫–æ–ª—å–æ—Ä–∏; –ª—ñ—Ç–µ—Ä–∏; —Ç–∏–ø –∫–æ—Ç–∞; _—Ç–æ—â–æ_

–¶–µ–π —Ç–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —á–∞—Å—Ç–æ –Ω–∞–∑–∏–≤–∞—é—Ç—å *—è–∫—ñ—Å–Ω–æ—é* –∞–±–æ *–∫–∞—Ç–µ–≥–æ—Ä–∏—á–Ω–æ—é* –≤–µ–ª–∏—á–∏–Ω–æ—é.

---

## –ü—Ä–∏–∫–ª–∞–¥–∏

–ù–∞–ø–µ–≤–Ω–æ, –±—É–¥–µ –∫–æ—Ä–∏—Å–Ω–æ –∑–≥–∞–¥–∞—Ç–∏ –∫—ñ–ª—å–∫–∞ [–ø—Ä–∏–∫–ª–∞–¥–∏ –ø—Ä–æ–±–ª–µ–º –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó]{.hi}.

. . .

- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —ñ—Å—Ç–æ—Ä—ñ—é –∂–∏—Ç—Ç—è/–∫—Ä–∏–º—ñ–Ω–∞–ª—å–Ω—É —ñ—Å—Ç–æ—Ä—ñ—é (—Ç–∞ –¥–µ–º–æ–≥—Ä–∞—Ñ—ñ—á–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏?):<br>–ß–∏ –º–æ–∂–µ–º–æ –º–∏ –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏, —á–∏ –±—É–¥–µ –æ–±–≤–∏–Ω—É–≤–∞—á–µ–Ω–∏–π **–∑–≤—ñ–ª—å–Ω–µ–Ω–∏–π –ø—ñ–¥ –∑–∞—Å—Ç–∞–≤—É**?

. . .

- –ù–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–±–æ—Ä—É —Å–∏–º–ø—Ç–æ–º—ñ–≤ —ñ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å:<br>–ß–∏ –º–æ–∂–µ–º–æ –º–∏ –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ **–º–µ–¥–∏—á–Ω–∏–π —Å—Ç–∞–Ω** –ø–∞—Ü—ñ—î–Ω—Ç–∞?

. . .

- –ó –ø—ñ–∫—Å–µ–ª—ñ–≤ —É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ:<br>–ß–∏ –º–æ–∂–µ–º–æ –º–∏ –∫–ª–∞—Å–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —è–∫ **–±—É–±–ª–∏–∫, —Ü—É—Ü–µ–Ω—è —á–∏ —ñ–Ω—à–µ**?

---

## –ü—ñ–¥—Ö–æ–¥–∏

–ú–æ–∂–Ω–∞ —É—è–≤–∏—Ç–∏ —Å–æ–±—ñ –¥–≤–∞ –ø–æ–≤‚Äô—è–∑–∞–Ω—ñ [–ø—ñ–¥—Ö–æ–¥–∏ –¥–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó]{.hi}

1. –ü–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏, **—è–∫—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é** –ø—Ä–∏–π–º–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

2. –û—Ü—ñ–Ω–∏—Ç–∏ **–π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –∫–æ–∂–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó** –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.

. . .

–¢–∏–º –Ω–µ –º–µ–Ω—à, –∑–∞–≥–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –±—É–¥–µ

- –í—ñ–∑—å–º—ñ—Ç—å –Ω–∞–±—ñ—Ä –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å $(x_1,y_1),\, (x_2,y_2),\,\ldots,\,(x_n,y_n)$
- –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä $\hat{y}_o=\mathop{f}(x_o)$

–±–∞–ª–∞–Ω—Å—É—é—á–∏ –º—ñ–∂ –∑–º—ñ—â–µ–Ω–Ω—è–º —ñ –¥–∏—Å–ø–µ—Ä—Å—ñ—î—é

---

## –ß–æ–º—É –Ω–µ —Ä–µ–≥—Ä–µ—Å—ñ—è?

–ú–µ—Ç–æ–¥–∏ —Ä–µ–≥—Ä–µ—Å—ñ—ó –Ω–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω—ñ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ **–∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏**.

[–ü—Ä–∏–∫–ª–∞–¥]{.ex} –†–æ–∑–≥–ª—è–Ω–µ–º–æ —Ç—Ä–∏ –º–µ–¥–∏—á–Ω—ñ –¥—ñ–∞–≥–Ω–æ–∑–∏: [—ñ–Ω—Å—É–ª—å—Ç/stroke]{.pink}, [–ø–µ—Ä–µ–¥–æ–∑—É–≤–∞–Ω–Ω—è/overdose]{.purple} —Ç–∞ [–Ω–∞–ø–∞–¥/seizure]{.orange}.

–î–ª—è —Ä–µ–≥—Ä–µ—Å—ñ—ó –ø–æ—Ç—Ä—ñ–±–µ–Ω —á–∏—Å–ª–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —è–∫ –Ω–∞–º –∫–æ–¥—É–≤–∞—Ç–∏ –Ω–∞—à—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó?

:::: {.columns}

::: {.column width="33%"}
**–í–∞—Ä—ñ–∞–Ω—Ç 1**
$$Y=\begin{cases}
  \displaystyle 1 & \text{if }\color{#e64173}{\text{ stroke}} \\
  \displaystyle 2 & \text{if }\color{#6A5ACD}{\text{ overdose}} \\
  \displaystyle 3 & \text{if }\color{#FFA500}{\text{ seizure}} \\
\end{cases}$$
:::

::: {.column width="33%"}
**–í–∞—Ä—ñ–∞–Ω—Ç 2**
$$Y=\begin{cases}
  \displaystyle 1 & \text{if }\color{#6A5ACD}{\text{ overdose}} \\
  \displaystyle 2 & \text{if }\color{#e64173}{\text{ stroke}} \\
  \displaystyle 3 & \text{if }\color{#FFA500}{\text{ seizure}} \\
\end{cases}$$
:::

::: {.column width="33%"}
**–í–∞—Ä—ñ–∞–Ω—Ç 3**
$$Y=\begin{cases}
  \displaystyle 1 & \text{if }\color{#FFA500}{\text{ seizure}} \\
  \displaystyle 2 & \text{if }\color{#e64173}{\text{ stroke}} \\
  \displaystyle 3 & \text{if }\color{#6A5ACD}{\text{ overdose}} \\
\end{cases}$$
:::

::::

. . .

–ü–æ—Ä—è–¥–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–µ–∑—Ä–æ–∑—É–º—ñ–ª–∏–π, –Ω–µ –∫–∞–∂—É—á–∏ –≤–∂–µ –ø—Ä–æ —Ñ–∞–∫—Ç–∏—á–Ω—É –æ—Ü—ñ–Ω–∫—É.
<br>
–í–∏–±—ñ—Ä –ø–æ—Ä—è–¥–∫—É —Ç–∞ –æ—Ü—ñ–Ω–∫–∏ –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏. üòø

---

## –ß–æ–º—É –Ω–µ —Ä–µ–≥—Ä–µ—Å—ñ—è?

–Ø–∫ –º–∏ –±–∞—á–∏–ª–∏, **–±—ñ–Ω–∞—Ä–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è** –ø—Ä–æ—Å—Ç—ñ—à—ñ.

[–ü—Ä–∏–∫–ª–∞–¥]{.ex} –Ø–∫—â–æ –º–∏ –æ–±–∏—Ä–∞—î–º–æ –ª–∏—à–µ –º—ñ–∂ [—ñ–Ω—Å—É–ª—å—Ç/stroke]{.pink} —Ç–∞ [–ø–µ—Ä–µ–¥–æ–∑—É–≤–∞–Ω–Ω—è/overdose]{.purple}

:::: {.columns}

::: {.column}
**–í–∞—Ä—ñ–∞–Ω—Ç 1**
$$Y=\begin{cases}
  \displaystyle 0 & \text{if }\color{#e64173}{\text{ stroke}} \\
  \displaystyle 1 & \text{if }\color{#6A5ACD}{\text{ overdose}} \\
\end{cases}$$
:::

::: {.column}
**–í–∞—Ä—ñ–∞–Ω—Ç 2**
$$Y=\begin{cases}
  \displaystyle 0 & \text{if }\color{#6A5ACD}{\text{ overdose}} \\
  \displaystyle 1 & \text{if }\color{#e64173}{\text{ stroke}} \\
\end{cases}$$
:::

::::

–æ—Ç—Ä–∏–º–∞—î–º–æ —Ç–æ–π —Å–∞–º–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

---

## –ß–æ–º—É –Ω–µ —Ä–µ–≥—Ä–µ—Å—ñ—è?

–£ —Ü–∏—Ö **–±—ñ–Ω–∞—Ä–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö** –º–∏ *–º–æ–∂–µ–º–æ* –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –ª—ñ–Ω—ñ–π–Ω—É —Ä–µ–≥—Ä–µ—Å—ñ—é.

–¶—ñ –º–æ–¥–µ–ª—ñ –Ω–∞–∑–∏–≤–∞—é—Ç—å—Å—è [–º–æ–¥–µ–ª—ñ –ª—ñ–Ω—ñ–π–Ω–æ—ó –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ / linear probability models]{.attn} (LPM).

**–ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è** –∑ LPM

1. –æ—Ü—ñ–Ω–∏—Ç–∏ —É–º–æ–≤–Ω—É –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å $y_i = 1$, _—Ç–æ–±—Ç–æ_, $\mathop{\text{Pr}}\left(y_o = 1 \mid x_o\right)$

2. –Ω–µ –æ–±–º–µ–∂–µ–Ω—ñ –º—ñ–∂ 0 —ñ 1

3. –í—Ä–∞—Ö–æ–≤—É—î –ø–æ—Ä—è–¥–æ–∫ —ñ –∑—Ä–æ–∑—É–º—ñ–ª—É –æ—Ü—ñ–Ω–∫—É –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ

[–Ü–Ω—à—ñ –ø–µ—Ä–µ–≤–∞–≥–∏:]{.note} –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –ª–µ–≥–∫–æ —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç—É—é—Ç—å—Å—è + –º–∏ –∑–Ω–∞—î–º–æ, —è–∫ –ø—Ä–∞—Ü—é—î OLS.

---

–†–æ–∑–≥–ª—è–Ω–µ–º–æ –ø—Ä–∏–∫–ª–∞–¥: –Ω–∞–±—ñ—Ä –¥–∞–Ω–∏—Ö `Default` –∑ `ISLR`

```{r, datatable-default, echo = F, cache = T}
set.seed(1)
ISLR::Default %>% sample_n(100) %>% datatable(
  rownames = F,
  options = list(dom = 't')
) %>% formatRound(columns = 3:4, digits = c(2, 0))
```

---

```{r, clean-default-data, include = F}
# Clean data
default_df = ISLR::Default %>% dplyr::mutate(i_default = 1 * (default == "Yes"))
```

[–î–∞–Ω—ñ:]{.hi-purple} –í–∏—Ö—ñ–¥–Ω–∞ –∑–º—ñ–Ω–Ω–∞ `default` –ø—Ä–∏–π–º–∞—î –ª–∏—à–µ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–Ω—è (–ª–∏—à–µ `r default_df$i_default %>% mean() %>% scales::percent(accuracy = 0.1)` —î `default`).

```{r, boxplot-default-balance, echo = F, cache = T}
ggplot(data = default_df, aes(x = default, y = balance)) +
geom_boxplot(outlier.shape = NA, fill = "grey90") +
geom_jitter(width = 0.2, alpha = 0.1, color = purple) +
xlab("Default") +
scale_y_continuous("Balance", labels = scales::comma) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
coord_flip()
```

---

[–î–∞–Ω—ñ:]{.hi-purple} –í–∏—Ö—ñ–¥–Ω–∞ –∑–º—ñ–Ω–Ω–∞ `default` –ø—Ä–∏–π–º–∞—î –ª–∏—à–µ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–Ω—è (–ª–∏—à–µ `r default_df$i_default %>% mean() %>% scales::percent(accuracy = 0.1)` —î `default`).

```{r, plot-default-points, echo = F, cache = T}
# Plot points
ggplot(data = default_df, aes(x = balance, y = i_default)) +
geom_point(alpha = 0.05, size = 3.5, color = purple) +
geom_line(stat = "smooth", color = NA, method = lm, size = 1.5) +
scale_y_continuous("Default") +
scale_x_continuous("Balance", labels = scales::comma) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book")
```

---

[–õ—ñ–Ω—ñ–π–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å–Ω–∞ –º–æ–¥–µ–ª—å]{.hi-pink} –º–∞—î –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è–º —É —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É:

```{r, plot-default-lpm, echo = F, cache = T}
ggplot(data = default_df, aes(x = balance, y = i_default)) +
geom_point(alpha = 0.05, size = 3.5, color = purple) +
geom_line(stat = "smooth", color = red_pink, method = lm, size = 1.5) +
scale_y_continuous("Default") +
scale_x_continuous("Balance", labels = scales::comma) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book")
```

---

[–õ–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è]{.hi-orange} –ø—Ä–æ–ø–æ–Ω—É—î –∫—Ä–∞—â–µ —Ä—ñ—à–µ–Ω–Ω—è.

```{r, plot-default-logistic, echo = F, cache = T}
ggplot(data = default_df, aes(x = balance, y = i_default)) +
geom_point(alpha = 0.05, size = 3.5, color = purple) +
geom_line(stat = "smooth", color = red_pink, method = lm, size = 1.5, alpha = 0.2) +
geom_line(stat = "smooth", color = orange, method = "glm", method.args = list(family = "binomial"), size = 1.5) +
scale_y_continuous("Default") +
scale_x_continuous("Balance", labels = scales::comma) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book")
```

# –õ–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è

## –í—Å—Ç—É–ø

[–õ–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è]{.attn} **–º–æ–¥–µ–ª—é—î –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å** —Ç–æ–≥–æ, —â–æ –Ω–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç $Y$ –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó**.

. . .

–ù–∞–ø—Ä–∏–∫–ª–∞–¥, –º–∏ —â–æ–π–Ω–æ –ø–æ–±–∞—á–∏–ª–∏ –≥—Ä–∞—Ñ—ñ–∫, –¥–µ

$$
\begin{align}
  \mathop{\text{Pr}}\left(\text{Default} = \text{Yes} | \text{Balance}\right) = p(\text{Balance})
\end{align}
$$

–º–∏ –º–æ–¥–µ–ª—é—î–º–æ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å ¬´–¥–µ—Ñ–æ–ª—Ç—É¬ª —è–∫ —Ñ—É–Ω–∫—Ü—ñ—é –≤—ñ–¥ ¬´–±–∞–ª–∞–Ω—Å—É¬ª.

. . .

–ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ **–æ—Ü—ñ–Ω–µ–Ω—ñ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ**, —â–æ–± **—Ä–æ–±–∏—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏**, _–Ω–∞–ø—Ä–∏–∫–ª–∞–¥_,

- —è–∫—â–æ $p(\text{Balance})\geq 0,5$, –º–∏ –º–æ–∂–µ–º–æ –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ ¬´–¢–∞–∫¬ª –¥–ª—è `default`
- —â–æ–± –±—É—Ç–∏ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∏–º–∏, –º–∏ –º–æ–≥–ª–∏ –± –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ "–¢–∞–∫", —è–∫—â–æ $p(\text{Balance})\geq0.1$

## –ß–æ–º—É "–ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞"?

–ú–∏ —Ö–æ—á–µ–º–æ –∑–º–æ–¥–µ–ª—é–≤–∞—Ç–∏ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —è–∫ —Ñ—É–Ω–∫—Ü—ñ—é –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ñ–≤ $\left(\beta_0 + \beta_1 X\right)$.

:::: {.columns}

::: {.column}
[–õ—ñ–Ω—ñ–π–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å–Ω–∞ –º–æ–¥–µ–ª—å]{.hi-pink}
<br>
[–ª—ñ–Ω—ñ–π–Ω–µ]{.pink} –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è. –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ñ–≤
$$
\begin{align}
  p(X) = \beta_0 + \beta_1 X
\end{align}
$$
:::

::: {.column}
[–õ–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ –º–æ–¥–µ–ª—å]{.hi-orange}
<br>
[–õ–æ–≥—ñ—Å—Ç–∏—á–Ω–µ]{.orange} –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ñ–≤
$$
\begin{align}
  p(X) = \dfrac{e^{\beta_0 + \beta_1 X}}{1 + e^{\beta_0 + \beta_1 X}}
\end{align}
$$
:::

::::

–©–æ —Ä–æ–±–∏—Ç—å —Ü—è *–ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è* $\left(\frac{e^x}{1+e^x}\right)$?


1. –∑–∞–±–µ–∑–ø–µ—á—É—î –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è –º—ñ–∂ 0 $(x\rightarrow-\infty)$ —Ç–∞ 1 $(x\rightarrow\infty)$

2. —Å—Ç–≤–æ—Ä—é—î S-–ø–æ–¥—ñ–±–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ—é

---

## –ß–æ–º—É "–ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞"?

–¢—Ä–æ—à–∫–∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏

$$
\begin{align}
  p(X) = \dfrac{e^{\beta_0 + \beta_1 X}}{1 + e^{\beta_0 + \beta_1 X}} \implies \color{#e64173}{\log \left( \dfrac{p(X)}{1-p(X)}\right)} = \color{#6A5ACD}{\beta_0 + \beta_1 X}
\end{align}
$$

[–ù–æ–≤–µ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è:]{.note} [log —à–∞–Ω—Å—ñ–≤]{.hi-pink}[^‚Ä†] –ª—ñ–≤–æ—Ä—É—á —ñ [–ª—ñ–Ω—ñ–π–Ω—ñ –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–∏]{.hi-purple} –ø—Ä–∞–≤–æ—Ä—É—á.

[^‚Ä†]: "–ª–æ–≥–∞—Ä–∏—Ñ–º —à–∞–Ω—Å—ñ–≤" —ñ–Ω–æ–¥—ñ –Ω–∞–∑–∏–≤–∞—é—Ç—å "logit".

. . .

1. **—ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—è** $\beta_j$ —Ü–µ [–ª–æ–≥–∞—Ä–∏—Ñ–º —à–∞–Ω—Å—ñ–≤]{.pink}, –∞ –Ω–µ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å

. . .

2. **–∑–º—ñ–Ω–∏ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ** —á–µ—Ä–µ–∑ $X$ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —Ä—ñ–≤–Ω—è $X$ 

---

## –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è

–ü–µ—Ä—à –Ω—ñ–∂ –º–∏ –∑–º–æ–∂–µ–º–æ –ø–æ—á–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞—Ç–∏, –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ü—ñ–Ω–∏—Ç–∏ $\beta_j$s.

$$
\begin{align}
  p(X) = \dfrac{e^{\beta_0 + \beta_1 X}}{1 + e^{\beta_0 + \beta_1 X}} \implies \color{#e64173}{\log \left( \dfrac{p(X)}{1-p(X)}\right)} = \color{#6A5ACD}{\beta_0 + \beta_1 X}
\end{align}
$$

–ú–∏ –æ—Ü—ñ–Ω—é—î–º–æ –ª–æ–≥—ñ—Å—Ç–∏—á–Ω—É —Ä–µ–≥—Ä–µ—Å—ñ—é –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é [–º–µ—Ç–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –ø—Ä–∞–≤–¥–æ–ø–æ–¥—ñ–±–Ω–æ—Å—Ç—ñ / maximum likelihood estimation]{.attn}.

. . .

[–ú–µ—Ç–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –ø—Ä–∞–≤–¥–æ–ø–æ–¥—ñ–±–Ω–æ—Å—Ç—ñ]{.attn} —à—É–∫–∞—î $\beta_j$s, —è–∫—ñ —Ä–æ–±–ª—è—Ç—å –Ω–∞—à—ñ –¥–∞–Ω—ñ ¬´–Ω–∞–π—ñ–º–æ–≤—ñ—Ä–Ω—ñ—à–∏–º–∏¬ª –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó –Ω–∞–º–∏ –º–æ–¥–µ–ª—ñ.

---

## –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –ø—Ä–∞–≤–¥–æ–ø–æ–¥—ñ–±–Ω–æ—Å—Ç—å

[MLE]{.attn} —à—É–∫–∞—î $\beta_j$s, —è–∫—ñ —Ä–æ–±–ª—è—Ç—å –Ω–∞—à—ñ –¥–∞–Ω—ñ ¬´–Ω–∞–π—ñ–º–æ–≤—ñ—Ä–Ω—ñ—à–∏–º–∏¬ª –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –Ω–∞—à–æ—ó –º–æ–¥–µ–ª—ñ.

$$
\begin{align}
  \color{#e64173}{\log \left( \dfrac{p(X)}{1-p(X)}\right)} = \color{#6A5ACD}{\beta_0 + \beta_1 X}
\end{align}
$$

. . .

1. $\color{#6A5ACD}{\beta_j}$ –ø–æ–∫–∞–∑—É—î, —è–∫ $x_j$ –≤–ø–ª–∏–≤–∞—î –Ω–∞ [–ª–æ–≥–∞—Ä–∏—Ñ–º —à–∞–Ω—Å—ñ–≤]{.pink}

. . .

2. —à–∞–Ω—Å $= \dfrac{p(X)}{1-p(X)}$.

–Ø–∫—â–æ $p(X) > 0,5$, —Ç–æ —à–∞–Ω—Å–∏ $>1$ —ñ [–ª–æ–≥–∞—Ä–∏—Ñ–º —à–∞–Ω—Å—ñ–≤]{.pink} $> 0$.

. . .

–¢–æ–∂ –º–∏ —Ö–æ—á–µ–º–æ –≤–∏–±—Ä–∞—Ç–∏ $\color{#6A5ACD}{\beta_j}$ —Ç–∞–∫, —â–æ–±

- [log odds]{.pink} –≤–∏—â–µ –Ω—É–ª—è –¥–ª—è —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å, –¥–µ $y_i=1$
- [log odds]{.pink} –Ω–∞–≤—ñ—Ç—å –±—ñ–ª—å—à–µ –¥–ª—è –æ–±–ª–∞—Å—Ç–µ–π $x_j$, –¥–µ –±—ñ–ª—å—à—ñ—Å—Ç—å $i$ –º–∞—é—Ç—å $y_i=1$

---

## –ë—ñ–ª—å—à —Ñ–æ—Ä–º–∞–ª—å–Ω–æ: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –ø—Ä–∞–≤–¥–æ–ø–æ–¥—ñ–±–Ω–æ—Å—Ç—å

–ú–∏ –æ—Ü—ñ–Ω—é—î–º–æ –ª–æ–≥—ñ—Å—Ç–∏—á–Ω—É —Ä–µ–≥—Ä–µ—Å—ñ—é —à–ª—è—Ö–æ–º –º–∞–∫—Å–∏–º—ñ–∑–∞—Ü—ñ—ó [—Ñ—É–Ω–∫—Ü—ñ—ó –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ]{.attn}

$$
\begin{align}
  \mathop{\ell}(\beta_0,\beta_1) = \prod_{i:y_i=1} \mathop{p}(x_i) \prod_{i:y_i=0} (1-\mathop{p}(x_i))
\end{align}
$$

–§—É–Ω–∫—Ü—ñ—è –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ –º–∞–∫—Å–∏–º—ñ–∑—É—î—Ç—å—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é

- –∑–±—ñ–ª—å—à–µ–Ω–Ω—è $p(x_i)$ –¥–ª—è —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å –∑ $y_i = 1$
- –∑—Ä–æ–±–∏—Ç–∏ $p(x_i)$ –º–∞–ª–∏–º –¥–ª—è —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å –∑ $y_i = 0$

---

## –í `R`

–£ `R` –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ–Ω–∞—Ç–∏ –ª–æ–≥—ñ—Å—Ç–∏—á–Ω—É —Ä–µ–≥—Ä–µ—Å—ñ—é –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó `glm()`.

–¢–∞–∫–æ–∂: `logistic_reg()` –≤ `tidymodels` (–∑ engine `"glm"`).

. . .

–ö—Ä—ñ–º —Ç–æ–≥–æ: `glm` –æ–∑–Ω–∞—á–∞—î —É–∑–∞–≥–∞–ª—å–Ω–µ–Ω—É (–ª—ñ–Ω—ñ–π–Ω—É –º–æ–¥–µ–ª—å).

. . .

¬´–£–∑–∞–≥–∞–ª—å–Ω–µ–Ω–∏–π¬ª –ø–æ —Å—É—Ç—ñ –æ–∑–Ω–∞—á–∞—î, —â–æ –º–∏ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –ø–µ–≤–Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ $\beta_0 + \beta_1 X$, —è–∫ –ª–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è –∑–∞—Å—Ç–æ—Å–æ–≤—É—î –ª–æ–≥—ñ—Å—Ç–∏—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é.

–ë—ñ–ª—å—à –∑–∞–≥–∞–ª—å–Ω–æ:

$$\color{#FFA500}{\mathbf{y}} = \color{#20B2AA}{g}^{-1} \left( \color{#6A5ACD}{\mathbf{X}} \color{#e64173}{\beta} \right) \iff \color{#20B2AA}{g}(\color{#FFA500}{\mathbf{y}}) = \color{#6A5ACD}{\mathbf{X}} \color{#e64173}{\beta} $$

---

## –í `R`

–£ `R` –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ–Ω–∞—Ç–∏ –ª–æ–≥—ñ—Å—Ç–∏—á–Ω—É —Ä–µ–≥—Ä–µ—Å—ñ—é –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó `glm()`.

**–ö–ª—é—á–æ–≤—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏** (–¥—É–∂–µ —Å—Ö–æ–∂—ñ –Ω–∞ `lm()`)

- —É–∫–∞–∂—ñ—Ç—å `—Ñ–æ—Ä–º—É–ª—É`, _–Ω–∞–ø—Ä–∏–∫–ª–∞–¥_, `y ~ .` –∞–±–æ `y ~ x + I(x^2)`

- –≤–∏–∑–Ω–∞—á—Ç–µ `family = "binomial"`

- –Ω–∞–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–µ—è–∫—ñ `data`

. . . 

```{r, ex-glm}
#| code-line-numbers: "4"
est_logistic = glm(
  i_default ~ balance,
  family = "binomial",
  data = default_df
)
```

---

```{r}
#| message: false
#| class-output: "highlight numberLines"
#| output-line-numbers: "2"

est_logistic %>% summary()
```

---

## –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏

```{r, beta-hats, include = F}
# Unrounded
b0 = est_logistic$coefficients[1]
b1 = est_logistic$coefficients[2]
# Rounded
br0 = est_logistic$coefficients[1] %>% round(2)
br1 = est_logistic$coefficients[2] %>% round(4)
```

–¢–∞–∫–∏–º —á–∏–Ω–æ–º, –Ω–∞—à—ñ –æ—Ü—ñ–Ω–∫–∏ $\hat{\beta}_0 \approx  `r br0`$ —ñ $\hat{\beta}_1 \approx  `r br1`$.

[–ü–∞–º‚Äô—è—Ç–∞–π—Ç–µ:]{.note} –¶—ñ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –¥–ª—è **log odds**.

. . . 

–Ø–∫—â–æ –º–∏ —Ö–æ—á–µ–º–æ [—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è]{.hi} –¥–ª—è $y_i$,
<br>—Ç–æ–¥—ñ –º–∏ —Å–ø–æ—á–∞—Ç–∫—É –ø–æ–≤–∏–Ω–Ω—ñ [–æ—Ü—ñ–Ω–∏—Ç–∏ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å]{.hi} $\mathop{p}(\text{Balance})$

$$
\begin{align}
  \hat{p}(\text{Balance}) = \dfrac{e^{\hat{\beta}_0 + \hat{\beta}_1 \text{Balance}}}{1 + e^{\hat{\beta}_0 + \hat{\beta}_1 \text{Balance}}}
  \approx
  \dfrac{e^{`r br0` + `r br1` \cdot \text{Balance}}}{1 + e^{`r br0` + `r br1` \cdot \text{Balance}}}
\end{align}
$$

. . . 

- –Ø–∫—â–æ $\text{Balance} = 0$, –º–∏ –æ—Ü—ñ–Ω—é—î–º–æ $\mathop{\hat{p}} \approx `r (exp(b0)/(1+exp(b0))) %>% round(6 ) %>% format(scientific = F)`$
- –Ø–∫—â–æ $\text{Balance} = 2000$, –º–∏ –æ—Ü—ñ–Ω—é—î–º–æ $\mathop{\hat{p}} \approx `r (exp(b0 + b1 * 2e3)/(1+exp(b0 + b1 * 2e3) )) %>% round(3)`$
- –Ø–∫—â–æ $\text{Balance} = 3000$, –º–∏ –æ—Ü—ñ–Ω—é—î–º–æ $\mathop{\hat{p}} \approx `r (exp(b0 + b1 * 3e3)/(1+exp(b0 + b1 * 3e3) )) %>% round(3)`$

---

–ü—Ä–æ–≥–Ω–æ–∑–∏ [–ª–æ–≥—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≥—Ä–µ—Å—ñ—ó]{.hi-orange} $\mathop{p}(\text{Balance})$

```{r, plot-default-logistic-2, echo = F, cache = T}
ggplot(data = default_df, aes(x = balance, y = i_default)) +
geom_point(alpha = 0.05, size = 3.5, color = purple) +
geom_line(stat = "smooth", color = red_pink, method = lm, size = 1.5, alpha = 0.2) +
geom_line(stat = "smooth", color = orange, method = "glm", method.args = list(family = "binomial"), size = 1.5) +
scale_y_continuous("Default") +
scale_x_continuous("Balance", labels = scales::comma) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book")
```

---

[–ü—Ä–∏–º—ñ—Ç–∫–∞:]{.note} –£—Å–µ, —â–æ –º–∏ —Ä–æ–±–∏–ª–∏ –¥–æ—Å—ñ, –ø–æ—à–∏—Ä—é—î—Ç—å—Å—è –Ω–∞ –º–æ–¥–µ–ª—ñ –∑ –±–∞–≥–∞—Ç—å–º–∞ –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–∞–º–∏.

[–í–∂–µ –≤—ñ–¥–æ–º–æ:]{.note} –í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ `predict()`, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏ –∑ –æ–±‚Äô—î–∫—Ç—ñ–≤ `glm`.

**–ù–æ–≤–µ —Ç–∞ –≤–∞–∂–ª–∏–≤–æ:** `predict()` —Å—Ç–≤–æ—Ä—é—î –∫—ñ–ª—å–∫–∞ `type` –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å

1. `type = "response"` –ø–µ—Ä–µ–¥–±–∞—á–∞—î *—à–∫–∞–ª—É –∑–∞–ª–µ–∂–Ω–æ—ó –∑–º—ñ–Ω–Ω–æ—ó*
<br>–¥–ª—è –ª–æ–≥—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≥—Ä–µ—Å—ñ—ó —Ü–µ –æ–∑–Ω–∞—á–∞—î **–ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—ñ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ** (–≤—ñ–¥ 0 –¥–æ 1)

2. `type = "link"` –ø–µ—Ä–µ–¥–±–∞—á–∞—î **–Ω–∞ —à–∫–∞–ª—ñ –ª—ñ–Ω—ñ–π–Ω–∏—Ö –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ñ–≤**
<br>–¥–ª—è –ª–æ–≥—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≥—Ä–µ—Å—ñ—ó —Ü–µ –æ–∑–Ω–∞—á–∞—î **–ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω—ñ –ª–æ–≥–∞—Ä–∏—Ñ–º—ñ—á–Ω—ñ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏** (–≤—ñ–¥ -‚àû –¥–æ ‚àû)

[–û–±–µ—Ä–µ–∂–Ω–æ:]{.attn} –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è `type = "link"`, —â–æ –≤–∞–º –º–æ–∂–µ –Ω–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è.

---

## –ü—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è

–ó—ñ–±—Ä–∞–≤—à–∏ –≤—Å–µ —Ä–∞–∑–æ–º, –º–∏ –º–æ–∂–µ–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ (–æ—Ü—ñ–Ω–µ–Ω—ñ) –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ $\hat{p}(X)$

```{r, ex-p-hat}
p_hat = predict(est_logistic, type = "response")
```

—è–∫—ñ –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è $y$

```{r, ex-y-hat}
# –ü—Ä–æ–≥–Ω–æ–∑—É—î '1' —è–∫—â–æ p_hat –±—ñ–ª—å—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 0.5
y_hat = as.numeric(p_hat >= 0.5)
```

# –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è

## Confusion matrix

```{r, calc-sensitivity, include = F}
tmp_df = tibble(
  y = default_df$i_default,
  y_hat = y_hat,
  y_hat_base = 0
)
ex_sensitivity = tmp_df %>% filter(y == 1) %>% transmute(y == y_hat) %>% unlist() %>% mean()
ex_sensitivity_base = tmp_df %>% filter(y == 1) %>% transmute(y == y_hat_base) %>% unlist() %>% mean()
```

[–º–∞—Ç—Ä–∏—Ü—è –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ]{.attn} —î –∑—Ä—É—á–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
<br>[–≤—ñ—Ä–Ω–∏—Ö]{.hi-orange} —Ç–∞ [—Ö–∏–±–Ω–∏–∫]{.hi-purple} –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–ª–∞—Å—É –Ω–∞—à–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.

```{r, default-confusion-matrix, include = F, cache = F}
# Create data frame
conf_df = data.frame(
  No = c("True Negative (TN)", "False Positive (FP)"),
  Yes = c("False Negative (FN)", "True Positive (TP)")
)
rownames(conf_df) = c("No", "Yes")
# Create the matrix
conf_mat = conf_df %>% hux() %>%
  add_rownames("") %>% 
  # add_colnames() %>%
  insert_row(c("", "Truth", "Truth"), after = 0) %>% merge_cells(1, 2:3) %>%
  insert_column(c("", "", "Prediction", "Prediction"), after = 0) %>% merge_cells(3:4, 1) %>%
  set_bold(1:2, everywhere, T) %>%
  set_bold(everywhere, 1:2, T) %>%
  set_align(1:2, 1:4, "center") %>%
  set_valign(3:4, 1, "middle") %>%
  set_top_border(3, 3:4, 1) %>%
  set_left_border(3:4, 3, 1)
# Change "1" hanging around in column names
conf_mat[2,2] = ""
```

```{r, cm-right-wrong, echo = F, eval = T}
conf_mat %>%
set_text_color(3,3,orange) %>%
set_text_color(3,4,purple) %>%
set_text_color(4,3,purple) %>%
set_text_color(4,4,orange)
```

[Accuracy]{.attn} –º–µ—Ç–æ–¥—É ‚Äì —Ü–µ —á–∞—Å—Ç–∫–∞ [–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö]{.orange} –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å, _—Ç–æ–±—Ç–æ_,
[
**Accuracy** = ([TN]{.hi-orange} + [TP]{.hi-orange}) / ([TN]{.hi-orange} + [TP]{.hi-orange} + [FN]{.hi-purple} + [FP]{.hi-purple})
]{.center}

–¶—è –º–∞—Ç—Ä–∏—Ü—è —Ç–∞–∫–æ–∂ –¥–æ–ø–æ–º–∞–≥–∞—î –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤ –æ—Ü—ñ–Ω–∫–∏.

---

## Confusion matrix

[–ß—É—Ç–ª–∏–≤—ñ—Å—Ç—å:]{.attn} —á–∞—Å—Ç–∫–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ $Y=1$, —è–∫—ñ –º–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑—É—î–º–æ.

[
**Sensitivity** = [TP]{.hi-orange} / ([TP]{.hi-orange} + [FN]{.hi-purple})
]{.center}

```{r, cm-sensitivity, echo = F, eval = T}
conf_mat %>%
set_text_color(2:4,4,purple) %>%
set_text_color(4,4,orange)
```

Sensitivity —Ç–∞–∫–æ–∂ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è [recall]{.attn} —ñ [true-positive rate]{.attn}.

–û–¥–∏–Ω–∏—Ü—è –º—ñ–Ω—É—Å sensitivity —Ü–µ [—á–∞—Å—Ç–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Ç–∏–ø—É II]{.attn}.

---

## Confusion matrix

[Specificity:]{.attn} —á–∞—Å—Ç–∫–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ $(Y=0)$, —è–∫—ñ –º–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥–±–∞—á–∏–ª–∏.

[
**Specificity** = [TN]{.hi-orange} / ([TN]{.hi-orange} + [FP]{.hi-purple})
]{.center}

```{r, cm-specificity, echo = F, eval = T}
conf_mat %>%
set_text_color(2:4,3,purple) %>%
set_text_color(3,3,orange)
```

–û–¥–∏–Ω–∏—Ü—è –º—ñ–Ω—É—Å sensitivity —Ü–µ [false-positive rate]{.attn} –∞–±–æ [—á–∞—Å—Ç–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Ç–∏–ø—É I]{.attn}.

---

## Confusion matrix

[Precision:]{.attn} —á–∞—Å—Ç–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ $(\hat{Y}=1)$, —è–∫—ñ —î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏.

[
**Precision:** = [TP]{.hi-orange} / ([TP]{.hi-orange} + [FP]{.hi-purple})
]{.center}

---

## –©–æ –æ–±—Ä–∞—Ç–∏?{.smaller}

[Q]{.qa} –û—Ç–∂–µ, *—è–∫–∏–π* –∫—Ä–∏—Ç–µ—Ä—ñ–π –º–∏ –ø–æ–≤–∏–Ω–Ω—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏?

[A]{.qa} –í—Å–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —É–º–æ–≤ —Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É.

- –ß–∏ —Åtrue positives –±—ñ–ª—å—à –≤–∞–≥–æ–º—ñ –Ω—ñ–∂ true negatives?
<br>[Sensitivity]{.note} –±—É–¥–µ –∫–ª—é—á–æ–≤–∏–º.

. . .

- –í–∏ —Ö–æ—á–µ—Ç–µ –º–∞—Ç–∏ –≤–∏—Å–æ–∫—É –≤–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å —É –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö?
<br>[Precision]{.note} ‚Äî –≤–∞—à –¥—Ä—É–≥

. . .

‚Äî –í—Å—ñ –ø–æ–º–∏–ª–∫–∏ —Ä—ñ–≤–Ω—ñ?
<br>
[Accuracy]{.note} —ñ–¥–µ–∞–ª—å–Ω–∞.

. . .

[–Ñ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ](https://yardstick.tidymodels.org/reference/index.html), _–Ω–∞–ø—Ä–∏–∫–ª–∞–¥_, –æ—Ü—ñ–Ω–∫–∞ [F~1~]{.attn} –ø–æ—î–¥–Ω—É—î –≤ —Å–æ–±—ñ —Ç–æ—á–Ω—ñ—Å—Ç—å —ñ —á—É—Ç–ª–∏–≤—ñ—Å—Ç—å.

---

## Confusion –≤ R

[`conf_mat()` –∑ `yardstick`](https://yardstick.tidymodels.org/reference/conf_mat.html) (`tidymodels`) –æ–±—á–∏—Å–ª—é—î Confusion Matrix.

- `data`: –Ω–∞–±—ñ—Ä –¥–∞–Ω–∏—Ö

- `truth`: –Ω–∞–∑–≤–∞ —Å—Ç–æ–≤–ø—Ü—è —ñ—Å—Ç–∏–Ω–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å

- `estimate`: –Ω–∞–∑–≤–∞ —Å—Ç–æ–≤–ø—Ü—è –Ω–∞—à–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤

. . .

```{r, est-cm}
cm_logistic = conf_mat(
  # Create a dataset of truth and predictions
  data = tibble(
    y_hat = y_hat %>% as.factor(),
    y = default_df$i_default %>% as.factor()
  ),
  truth = y, estimate = y_hat
)
```

---

## Confusion –≤ R

[`conf_mat()` –∑ `yardstick`](https://yardstick.tidymodels.org/reference/conf_mat.html) (`tidymodels`) –æ–±—á–∏—Å–ª—é—î Confusion Matrix.

- `data`: –Ω–∞–±—ñ—Ä –¥–∞–Ω–∏—Ö

- `truth`: –Ω–∞–∑–≤–∞ —Å—Ç–æ–≤–ø—Ü—è —ñ—Å—Ç–∏–Ω–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å

- `estimate`: –Ω–∞–∑–≤–∞ —Å—Ç–æ–≤–ø—Ü—è –Ω–∞—à–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤


```{r, est-cm-out, echo = F}
cm_logistic
```

---

## –ü–æ—Ä–æ–≥–∏

–í–∞—à–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞–∫–æ–∂ –≤–∏–∑–Ω–∞—á–∞—î ¬´–æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π¬ª –ø–æ—Ä—ñ–≥, —è–∫–∏–π –ø–µ—Ä–µ–º—ñ—â—É—î –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è –∑ –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º = –ù—ñ) –¥–æ —ñ–Ω—à–æ–≥–æ –∫–ª–∞—Å—É (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º = –¢–∞–∫).

–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –ë–∞–π—î—Å–∞ –ø–µ—Ä–µ–¥–±–∞—á–∞—î –ø–æ—Ä—ñ–≥ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ 0,5.

–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –ë–∞–π—î—Å–∞ –Ω–µ–º–æ–∂–ª–∏–≤–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –∑ —Ç–æ—á–∫–∏ –∑–æ—Ä—É —Ç–æ—á–Ω–æ—Å—Ç—ñ, –∞–ª–µ —è–∫—â–æ —É –≤–∞—Å —î —ñ–Ω—à—ñ —Ü—ñ–ª—ñ, –∫—Ä—ñ–º —Ç–æ—á–Ω–æ—Å—Ç—ñ, –≤–∞–º —Å–ª—ñ–¥ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏ —ñ–Ω—à—ñ –ø–æ—Ä–æ–≥–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è.

---

–ö–æ–ª–∏ –º–∏ –∑–º—ñ–Ω—é—î–º–æ –ø–æ—Ä–æ–≥–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è, –Ω–∞—à—ñ —á–∞—Å—Ç–æ—Ç–∏ –ø–æ–º–∏–ª–æ–∫ ([I]{.hi-purple} —Ç–∏–ø—É, [II]{.hi-orange} —Ç–∏–ø—É —Ç–∞ [–∑–∞–≥–∞–ª—å–Ω—ñ]{.hi-slate}) –∑–º—ñ–Ω—é—é—Ç—å—Å—è.

```{r, calc-threshold, include = F, cache = T}
threshold_df = mclapply(
  X = seq(0, 1, by = 0.00001),
  FUN = function(cutoff) {
    # The predictions
    y_df = tibble(
      y = default_df$i_default,
      y_hat = (1 * (p_hat > cutoff))
    )
    # Results
    data.frame(
      cutoff = cutoff,
      full = mean(y_df$y != y_df$y_hat),
      type1 = y_df %>% filter(y == 0) %>% transmute(y != y_hat) %>% unlist() %>% mean(),
      type2 = y_df %>% filter(y == 1) %>% transmute(y != y_hat) %>% unlist() %>% mean()
    )
  }
) %>% bind_rows()
```

```{r, plot-threshold, echo = F}
ggplot(data = threshold_df, aes(x = cutoff)) +
geom_hline(yintercept = 0) +
geom_line(aes(y = type1, color = "1"), size = 1) +
geom_line(aes(y = type2, color = "2"), size = 1) +
geom_line(aes(y = full, color = "3"), size = 0.3, linetype = "longdash") +
scale_y_continuous("Error rate", labels = scales::percent) +
scale_x_continuous("Threshold for positive prediction") +
scale_color_manual(
  "Error rate:",
  labels = c("Type I (FP/N)", "Type II (FN/P)", "All"),
  values = c(purple, orange, slate)
) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

[ROC]{.attn} –∫—Ä–∏–≤–∞–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —ñ—Å—Ç–∏–Ω–Ω—ñ (TP/P) —ñ —Ö–∏–±–Ω–æ–ø–æ–∑–∏—Ç–∏–≤–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ (FP/N).

```{r, calc-roc, include = F, cache = T}
roc_df = threshold_df %>% transmute(
  fpr = type1,
  tpr = 1 - type2
) %>% as_tibble()
```

```{r, plot-roc, echo = F, fig.height = 6, cache = T}
ggplot(data = roc_df, aes(x = fpr, y = tpr)) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

. . .

¬´–ù–∞–π–∫—Ä–∞—â–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å¬ª –æ–∑–Ω–∞—á–∞—î, —â–æ [ROC]{.pink} –∫—Ä–∏–≤–∞ –Ω–∞–±–ª–∏–∂–∞—î—Ç—å—Å—è –¥–æ –≤–µ—Ä—Ö–Ω—å–æ–≥–æ –ª—ñ–≤–æ–≥–æ –∫—É—Ç–∞.

---

[AUC]{.hi-orange} —Ñ–æ—Ä–º—É—î [–ø–ª–æ—â—É –ø—ñ–¥ –∫—Ä–∏–≤–æ—é (ROC)]{.orange}.

```{r, plot-auc, echo = F, fig.height = 6, cache = T}
ggplot(data = roc_df, aes(x = fpr, y = tpr)) +
geom_ribbon(
  aes(ymin = 0, ymax = tpr),
  fill = orange, alpha = 0.75
) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

. . .

¬´–ù–∞–π–∫—Ä–∞—â–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å¬ª –æ–∑–Ω–∞—á–∞—î, —â–æ [AUC]{.orange} –Ω–∞–±–ª–∏–∂–∞—î—Ç—å—Å—è –¥–æ 1. –í–∏–ø–∞–¥–∫–æ–≤–∏–π —à–∞–Ω—Å: 0,5

---

[Q]{.qa} –û—Ç–∂–µ, —è–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –Ω–∞–º –¥–∞—î AUC?

. . .

[A]{.qa} AUC –ø–æ–≤—ñ–¥–æ–º–ª—è—î –Ω–∞–º, –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –º–∏ **—Ä–æ–∑–¥—ñ–ª–∏–ª–∏** *–ø–æ–∑–∏—Ç–∏–≤–Ω—ñ* —ñ *–Ω–µ–≥–∞—Ç–∏–≤–Ω—ñ* –º—ñ—Ç–∫–∏.

---

```{r, roc-setup, include = F}
# Distributions of positive and negative lables
d_pos = function(x, sep) dbeta(x, 15, 15-sep)
d_neg = function(x, sep) dbeta(x, 15-sep, 15)
# The implied TPR and FPR given a threshold
tpr = function(threshold, sep) pbeta(threshold, 15, 15-sep, lower.tail = F)
fpr = function(threshold, sep) pbeta(threshold, 15-sep, 15, lower.tail = F)
```

[–ü—Ä–∏–∫–ª–∞–¥:]{.ex} –†–æ–∑–ø–æ–¥—ñ–ª —ñ–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç–µ–π –¥–ª—è [–Ω–µ–≥–∞—Ç–∏–≤–Ω–∏–π]{.hi-orange} —ñ [–ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π]{.hi-purple} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.

```{r, roc-ex1-d, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = 4), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 4), color = orange, fill = orange, alpha = 0.2) +
geom_hline(yintercept = 0) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–î–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –∑–∞–¥–∞–Ω–æ–≥–æ [–ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è]{.hi-pink}

```{r, roc-ex1-threshold, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = 4), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 4), color = orange, fill = orange, alpha = 0.2) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.4375, color = red_pink, size = 1.2) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–î–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –∑–∞–¥–∞–Ω–æ–≥–æ [–ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è]{.hi-pink} –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ [false positives]{.hi-yellow}

```{r, roc-ex1-threshold2, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = 4), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 4), color = orange, fill = orange, alpha = 0.2) +
geom_area(
  stat = "function", fun = . %>% d_neg(., sep = 4), color = yellow, fill = yellow, alpha = 0.8,
  xlim = c(0.4375, 1)
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.4375, color = red_pink, size = 1.2) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–î–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –∑–∞–¥–∞–Ω–æ–≥–æ [–ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è]{.hi-pink} –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ false positives —Ç–∞ [true positives]{.hi-yellow}

```{r, roc-ex1-threshold3, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(
  stat = "function", fun = . %>% d_pos(., sep = 4), color = purple, fill = purple,
  xlim = c(0, 0.4375)
) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 4), color = orange, fill = orange, alpha = 0.2) +
geom_area(
  stat = "function", fun = . %>% d_pos(., sep = 4), color = yellow, fill = yellow, alpha = 0.8,
  xlim = c(0.4375, 1)
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.4375, color = red_pink, size = 1.2) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

```{r, roc-ex1-data, include = F}
# Generate data
roc1 = tibble(
  tpr = seq(0, 1, 0.001) %>% tpr(., sep = 4),
  fpr = seq(0, 1, 0.001) %>% fpr(., sep = 4)
)
```

... —Ä—É—Ö–∞—é—á–∏—Å—å –≤–∑–¥–æ–≤–∂ –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –ø–æ—Ä–æ–≥–∞—Ö –≥–µ–Ω–µ—Ä—É—î [ROC]{.hi-pink} ([AUC]{.hi-orange} ‚âà `r roc1 %>% arrange(fpr) %>% mutate(dist = fpr - lag(fpr)) %>% transmute(new = tpr * dist) %$% new %>% sum(na.rm = T) %>% round(3)`).

```{r, roc-ex1-roc, echo = F}
# Plot
ggplot(
  data = roc1,
  aes(x = fpr, y = tpr)
) +
geom_ribbon(
  aes(ymin = 0, ymax = tpr),
  fill = orange, alpha = 0.75
) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–ó–±—ñ–ª—å—à–µ–Ω–Ω—è —Ä–æ–∑—Ä–∏–≤—É –º—ñ–∂ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ [negative]{.hi-orange} —ñ [positive]{.hi-purple}...

```{r, roc-ex2-d, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = 8), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 8), color = orange, fill = orange, alpha = 0.2) +
geom_hline(yintercept = 0) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

```{r, roc-ex2-data, include = F}
# Generate data
roc2 = tibble(
  tpr = seq(0, 1, 0.001) %>% tpr(., sep = 8),
  fpr = seq(0, 1, 0.001) %>% fpr(., sep = 8)
)
```

... –∑–º–µ–Ω—à—É—î –ø–æ–º–∏–ª–∫—É (–∑–º—ñ—â—É—î [ROC]{.hi-pink}) —ñ –∑–±—ñ–ª—å—à—É—î [AUC]{.hi-orange} (‚âà `r roc2 %>% arrange(fpr) %>% mutate(dist = fpr - lag(fpr)) %>% transmute(new = tpr * dist) %$% new %>% sum(na.rm = T) %>% round(3)`).

```{r, roc-ex2-roc, echo = F}
# Plot
ggplot(
  data = roc2,
  aes(x = fpr, y = tpr)
) +
geom_ribbon(
  aes(ymin = 0, ymax = tpr),
  fill = orange, alpha = 0.75
) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–ü–æ–¥–∞–ª—å—à–µ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è —Ä–æ–∑—Ä–∏–≤—É –º—ñ–∂ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ [negative]{.hi-orange} —ñ [positive]{.hi-purple}...

```{r, roc-ex3-d, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = 10), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 10), color = orange, fill = orange, alpha = 0.2) +
geom_hline(yintercept = 0) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

```{r, roc-ex3-data, include = F}
# Generate data
roc3 = tibble(
  tpr = seq(0, 1, 0.001) %>% tpr(., sep = 10),
  fpr = seq(0, 1, 0.001) %>% fpr(., sep = 10)
)
```

... –∑–º–µ–Ω—à—É—î –ø–æ–º–∏–ª–∫—É (–∑–º—ñ—â—É—î [ROC]{.hi-pink}) —ñ –∑–±—ñ–ª—å—à—É—î [AUC]{.hi-orange} (‚âà `r roc3 %>% arrange(fpr) %>% mutate(dist = fpr - lag(fpr)) %>% transmute(new = tpr * dist) %$% new %>% sum(na.rm = T) %>% round(3)`).

```{r, roc-ex3-roc, echo = F}
# Plot
ggplot(
  data = roc3,
  aes(x = fpr, y = tpr)
) +
geom_ribbon(
  aes(ymin = 0, ymax = tpr),
  fill = orange, alpha = 0.75
) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–ù–µ–≤–µ–ª–∏–∫–∞ —Ä—ñ–∑–Ω–∏—Ü—è (¬´–≤–≥–∞–¥—É–≤–∞–Ω–Ω—è¬ª) –º—ñ–∂ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ [–Ω–µ–≥–∞—Ç–∏–≤–Ω–∏–π]{.hi-orange} —ñ [–ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π]{.hi-purple}...

```{r, roc-ex4-d, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = 0.2), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = 0.2), color = orange, fill = orange, alpha = 0.2) +
geom_hline(yintercept = 0) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

```{r, roc-ex4-data, include = F}
# Generate data
roc4 = tibble(
  tpr = seq(0, 1, 0.001) %>% tpr(., sep = 0.2),
  fpr = seq(0, 1, 0.001) %>% fpr(., sep = 0.2)
)
```

... –∑–±—ñ–ª—å—à—É—î –ø–æ–º–∏–ª–∫—É (–∑–º—ñ—â—É—î [ROC]{.hi-pink}) —ñ –ø—ñ–¥—à—Ç–æ–≤—Ö—É—î [AUC]{.hi-orange} –¥–æ 0,5 (—Ç—É—Ç ‚âà `r roc4 %>% arrange(fpr) %>% mutate(dist = fpr - lag( fpr)) %>% transmute(new = tpr * dist) %$% new %>% sum(na.rm = T) %>% round(3)`).

```{r, roc-ex4-roc, echo = F}
# Plot
ggplot(
  data = roc4,
  aes(x = fpr, y = tpr)
) +
geom_ribbon(
  aes(ymin = 0, ymax = tpr),
  fill = orange, alpha = 0.75
) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ [negative]{.hi-orange} —ñ [positive]{.hi-purple} —É –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –Ω–∞–ø—Ä—è–º–∫—É...

```{r, roc-ex5-d, echo = F}
ggplot(
  data = tibble(x = seq(0, 1, 0.001)),
  aes(x = x)
) +
geom_area(stat = "function", fun = . %>% d_pos(., sep = -10), color = purple, fill = purple) +
geom_area(stat = "function", fun = . %>% d_neg(., sep = -10), color = orange, fill = orange, alpha = 0.2) +
geom_hline(yintercept = 0) +
scale_x_continuous("Threshold for predicting 'Positive'", labels = scales::percent) +
ylab("Density") +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

```{r, roc-ex5-data, include = F}
# Generate data
roc5 = tibble(
  tpr = seq(0, 1, 0.001) %>% tpr(., sep = -10),
  fpr = seq(0, 1, 0.001) %>% fpr(., sep = -10)
)
```

... –∑–±—ñ–ª—å—à—É—î –ø–æ–º–∏–ª–∫—É (–∑–º—ñ—â—É—î [ROC]{.hi-pink}) —ñ —à—Ç–æ–≤—Ö–∞—î [AUC]{.hi-orange} –¥–æ 0 (—Ç—É—Ç ‚âà `r roc5 %>% arrange(fpr) %>% mutate(dist = fpr - lag( fpr)) %>% transmute(new = tpr * dist) %$% new %>% sum(na.rm = T) %>% round(3)`).

```{r, roc-ex5-roc, echo = F}
# Plot
ggplot(
  data = roc5,
  aes(x = fpr, y = tpr)
) +
geom_ribbon(
  aes(ymin = 0, ymax = tpr),
  fill = orange, alpha = 0.75
) +
geom_path(color = red_pink, size = 1) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_abline(intercept = 0, slope = 1, color = slate, linetype = "dotted", size = 0.5) +
scale_x_continuous("False positive rate (FP/N)", labels = scales::percent) +
scale_y_continuous("True positive rate (TP/P)", labels = scales::percent) +
theme_minimal(base_size = 20, base_family = "Fira Sans Book") +
theme(legend.position = "bottom")
```

---

## AUC –≤ R

–í–∏ –º–æ–∂–µ—Ç–µ –æ–±—á–∏—Å–ª–∏—Ç–∏ **AUC** —É R –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó [`roc_auc()` –∑ `yardstick`](https://yardstick.tidymodels.org/reference/roc_auc.html). –ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—ñ–≤.

**Logistic elasticnet** `glmnet()` (–¥–ª—è ridge , lasso —Ç–∞ elasticnet) –ø–æ—à–∏—Ä—é—î—Ç—å—Å—è –Ω–∞ logistic regression —à–ª—è—Ö–æ–º –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç—É `family` —É `glmnet`, *—Ç–æ–±—Ç–æ* ,

```{r, eval = F}
# Example of logistic regression with lasso
logistic_lasso = glmnet(
  y = y,
  x = x,
  family = "binomial",
  alpha = 1,
  lambda = best_lambda
)
```

–í–∏ —Ç–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ö–∞–Ω—ñ–∑–º `"glmnet"` –¥–ª—è `logistic_reg()` –≤ `parsnip`.

# –î—è–∫—É—é –∑–∞ —É–≤–∞–≥—É! {.unnumbered .unlisted}

<br>
<br>

`r fa("telegram")` [Data Mirosh](https://t.me/araprof)

`r fa("github")` [\@aranaur](https://github.com/Aranaur)

`r fa("envelope")` ihor.miroshnychenko\@kneu.ua

`r fa("linkedin")` [\@ihormiroshnychenko](https://www.linkedin.com/in/ihormiroshnychenko/)

`r fa("house")` [aranaur.rbind.io](https://aranaur.rbind.io)
